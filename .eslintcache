[{"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/index.js":"1","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/App.js":"2","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Home.js":"3","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/NavBar.js":"4","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Footer.js":"5","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/VirtualPet.js":"6","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SceneComponent.jsx":"7","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Complete.js":"8","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goal.js":"9","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goals.js":"10","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newForm.jsx":"11","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateForm.jsx":"12","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newTaskForm.jsx":"13","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateTaskForm.jsx":"14","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignUp.jsx":"15","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Login.jsx":"16","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/LoginFormSection.js":"17","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reportWebVitals.js":"18"},{"size":839,"mtime":1613286982524,"results":"19","hashOfConfig":"20"},{"size":1490,"mtime":1613287103719,"results":"21","hashOfConfig":"20"},{"size":2361,"mtime":1613287971471,"results":"22","hashOfConfig":"20"},{"size":1270,"mtime":1613190606494,"results":"23","hashOfConfig":"20"},{"size":317,"mtime":1613018513959,"results":"24","hashOfConfig":"20"},{"size":2406,"mtime":1613074488791,"results":"25","hashOfConfig":"20"},{"size":1601,"mtime":1612836272207,"results":"26","hashOfConfig":"20"},{"size":3077,"mtime":1613190606489,"results":"27","hashOfConfig":"20"},{"size":8069,"mtime":1613254542835,"results":"28","hashOfConfig":"20"},{"size":3324,"mtime":1613287733405,"results":"29","hashOfConfig":"20"},{"size":3368,"mtime":1613083382300,"results":"30","hashOfConfig":"20"},{"size":6260,"mtime":1613253922174,"results":"31","hashOfConfig":"20"},{"size":2720,"mtime":1613254743122,"results":"32","hashOfConfig":"20"},{"size":3257,"mtime":1613255300378,"results":"33","hashOfConfig":"20"},{"size":4382,"mtime":1613287618262,"results":"34","hashOfConfig":"20"},{"size":3951,"mtime":1613287633002,"results":"35","hashOfConfig":"20"},{"size":961,"mtime":1613283414453,"results":"36","hashOfConfig":"20"},{"size":362,"mtime":1613286408612,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"l1appl",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"40"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/index.js",[],["87","88"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/App.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Home.js",["89","90","91"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/NavBar.js",["92","93","94","95","96"],"import React from 'react'\r\nimport logo from '../images/sprig logo.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NavBar extends React.Component {\r\n\r\n\r\n\r\n\r\nrender() {\r\n    return (\r\n        <div className='NavBar'>\r\n            <div className=\"ui mini menu\">\r\n\r\n                <div className=\"ui dropdown icon item\">\r\n                    <img className=\"ui mini circular image\" src={logo}/>\r\n                    <i className=\"dropdown icon\"></i>\r\n                </div>\r\n\r\n\r\n                <a className=\"item\">Welcome, User</a>\r\n                <a className=\"item\"><Link to='/goals'>Goals</Link></a>\r\n                <a className=\"item\"><Link to='/completed'>Completed</Link></a>\r\n\r\n\r\n                <div class=\"right menu\">\r\n                    <div class=\"item\">\r\n                        <div class=\"ui icon input\">\r\n                            <input type=\"text\" placeholder=\"Search...\"/>\r\n                            <i class=\"search link icon\"></i>\r\n                        </div>\r\n                    </div>\r\n                        <a class=\"ui item\"><Link to='/'>Sign Out</Link></a>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"ui divider\">\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default NavBar;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Footer.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/VirtualPet.js",["97","98","99"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Theme.css';\r\n\r\nimport'@babylonjs/loaders/glTF'\r\nimport * as BABYLON from \"@babylonjs/core/Legacy/legacy\";\r\nimport SceneComponent from './SceneComponent';\r\nimport { FreeCamera, Vector3, HemisphericLight, MeshBuilder } from '@babylonjs/core';\r\n\r\nlet container;\r\nlet box;\r\n\r\n\r\n\r\nclass VirtualPet extends React.Component {\r\n\r\n\r\n    \r\nrender() {\r\n\r\n    return (\r\n        \r\n        <div className='VirtualPet' >\r\n            <SceneComponent antialias onSceneReady={this.onSceneReady} onRender={this.onRender} id='my-canvas' />\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n    onSceneReady = scene => {\r\n\r\n           // Default Environment\r\n\r\n    \r\n        // This creates and positions a free camera (non-mesh)\r\n        var camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\r\n        // This targets the camera to scene origin\r\n        camera.setTarget(Vector3.Zero());\r\n        const canvas = scene.getEngine().getRenderingCanvas();\r\n        // This attaches the camera to the canvas\r\n        camera.attachControl(canvas, true);\r\n        \r\n        // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\r\n        var light = new HemisphericLight(\"light\", new Vector3(0, 1, 0), scene);\r\n        // Default intensity is 1. Let's dim the light a small amount\r\n        light.intensity = 0.7;\r\n\r\n        // Our built-in 'ground' shape.\r\n        MeshBuilder.CreateGround(\"ground\", {width: 25, height: 6}, scene);\r\n\r\n\r\n\r\n\r\n        BABYLON.SceneLoader.LoadAssetContainer(\"../models/\", \"sprig-wave.glb\", scene, function (container) {\r\n            var meshes = container.meshes;\r\n            var materials = container.materials;\r\n\r\n            const sprig = meshes[0]\r\n\r\n            scene.beforeRender = () => {\r\n                // sprig.position.y = 0;\r\n                sprig.rotation.y = .1;\r\n                sprig.rotationQuaternion = undefined;\r\n\r\n                }\r\n            // Adds all elements to the scene\r\n            container.addAllToScene();\r\n        });\r\n  }\r\n\r\n    //Will run on every frame render.  We are spinning the box on y-axis.\r\n    onRender = scene => {\r\n        if (box !== undefined) {\r\n        var deltaTimeInMillis = scene.getEngine().getDeltaTime();\r\n        const rpm = 10;\r\n        box.rotation.y += ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\r\n        }\r\n  }\r\n\r\n\r\n}\r\nexport default VirtualPet;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SceneComponent.jsx",["100","101","102","103"],"import * as BABYLON from \"@babylonjs/core/Legacy/legacy\";\r\nimport { Engine, Scene } from '@babylonjs/core'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\n\r\n\r\n\r\nexport default (props) => {\r\n    \r\n    const pet = document.querySelector('.VirtualPet')\r\n    const reactCanvas = useRef(null);\r\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\r\n\r\n      \r\n\r\n\r\n    useEffect(() => {\r\n        if (reactCanvas.current) {\r\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\r\n            const scene = new Scene(engine, sceneOptions);\r\n\r\n            if (scene.isReady()) {\r\n                props.onSceneReady(scene)\r\n                \r\n            } else {\r\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\r\n            }\r\n\r\n            engine.runRenderLoop(() => {\r\n                if (typeof onRender === 'function') {\r\n                    onRender(scene);\r\n                }\r\n                scene.render();\r\n            })\r\n            \r\n            const resize = () => {\r\n                scene.getEngine().resize();\r\n            }\r\n            if (window) {\r\n                window.addEventListener('resize', resize);\r\n            }\r\n            return () => {\r\n                scene.getEngine().dispose();\r\n                if (window) {\r\n                    window.removeEventListener('resize', resize);\r\n                }\r\n            }\r\n        }\r\n    }, [reactCanvas])\r\n    return (\r\n        <canvas ref={reactCanvas} {...rest} />\r\n    );\r\n}","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Complete.js",["104"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\nimport VirtualPet from './VirtualPet'\r\n\r\n\r\nclass Complete extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          goals: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = \"http://localhost:3001/api/v1/goals\";\r\n        fetch(url)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            }\r\n            throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ goals: response }))\r\n          .catch(() => this.props.history.push(\"/\"));\r\n    }\r\n\r\n\r\nrender() {\r\n        const { goals } = this.state;\r\n\r\n        const completedGoals = goals.filter((goal, index) => (\r\n            goal.completed === true\r\n        ));\r\n\r\n        const allGoals = completedGoals.map((goal, index) => (\r\n            <div className='GoalCard grey ui fluid card'>\r\n                <div className=\"content\">\r\n                    {/* <i class=\"right floated like icon\">{goal.tag_id}</i> */}\r\n                    <button class=\"circular ui right floated olive icon button\">\r\n                        <i class=\"check icon\"></i>\r\n                    </button>\r\n                    <div className=\"header\">{goal.name} <i class=\"small right floated list icon\"> {goal.tasks.length}</i></div>\r\n                </div>\r\n\r\n                <div className=\"black description\">\r\n                    {goal.info}\r\n                </div>\r\n\r\n                <div class=\"extra content\">\r\n                    <span class=\"left floated like\">\r\n                    <i class=\"calendar outline icon\"></i>\r\n                    {goal.date}\r\n                    </span>\r\n                    <span class=\"right floated star\">\r\n                    <i class=\"clock outline icon\"></i>\r\n                    {goal.time}\r\n                    </span>   \r\n                </div>\r\n                <Link to={`/goals/${goal.id}`}><div class=\"ui bottom attached button\">\r\n                    <i class=\"angle down icon\"></i>\r\n                    Details\r\n                </div></Link>\r\n                \r\n\r\n            </div>\r\n        ));\r\n\r\n        const noGoals = (\r\n            <div className='GoalCard ui header'>\r\n            <h4>\r\n                No goals completed yet.\r\n            </h4>\r\n            </div>\r\n        )\r\n\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n                <h1>Completed Goals</h1>\r\n\r\n        <VirtualPet />\r\n            <div className=\"ButtonColumn sixteen wide column\">\r\n            </div>\r\n  \r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"Main six wide column\">Placeholder</div>\r\n                <div className=\"Main eight wide column\">\r\n                    {goals.length > 0 ? allGoals : noGoals}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default Complete;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goal.js",["105","106","107","108","109","110","111"],"import React from 'react'\r\nimport { Link , Redirect} from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\nimport VirtualPet from './VirtualPet'\r\n\r\nimport logo from '../images/sprig logo.png'\r\nimport { SetStateAction } from '@babylonjs/core';\r\n\r\nclass Goal extends React.Component {\r\n  \r\n  \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          goal: { tasks: [] },\r\n          numoftasks: 0 };\r\n\r\n          this.handleDelete = this.handleDelete.bind(this);\r\n          this.markComplete = this.markComplete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n      const { match: {params: { id }}} = this.props;\r\n      \r\n        const url = `http://localhost:3001/api/v1/goals/${id}`;\r\n\r\n        fetch(url)\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response.json();\r\n            }\r\n            throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.setState({ goal: response }))\r\n        .catch(() => this.props.history.push(\"/goals\"));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      \r\n      const tasklistlength = this.state.goal.tasks.length\r\n\r\n      if(prevState.numoftasks !== tasklistlength) {\r\n        console.log(prevState.numoftasks, tasklistlength)\r\n\r\n        this.setState({\r\n          numoftasks: tasklistlength\r\n        })\r\n      }\r\n    }\r\n\r\n    handleDelete() {\r\n      const { match: {params: { id }}} = this.props;\r\n      const url = `http://localhost:3001/api/v1/goals/${id}`;\r\n\r\n        fetch(url, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n            .then(response => {\r\n              if (response.ok) {\r\n                return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n            })\r\n            .then(() => this.props.history.push(\"/goals\"))\r\n            .catch(error => console.log(error.message));\r\n\r\n    }\r\n\r\n    markComplete() {\r\n      const { match: {params: { id }}} = this.props;\r\n      const url = `http://localhost:3001/api/v1/goals/${id}`;\r\n      \r\n       //-----------------------\r\n      const reqObj = {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body:  JSON.stringify({\r\n          completed: !this.state.goal.completed\r\n        })\r\n\r\n      }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n\r\n        this.setState({\r\n          goal: {...this.state.goal, completed: !this.state.goal.completed}\r\n        })\r\n\r\n    }\r\n\r\n    grabTasks() {\r\n      const { goal } = this.state;\r\n      const tasklistlength = goal.tasks.length\r\n\r\n      return goal.tasks.map((task, index) => (\r\n\r\n        <div className='Task item'>\r\n\r\n        <i className=\"right triangle icon\"></i>\r\n\r\n          <div className=\"content\">\r\n            <div className=\"header\">{task.name}</div>\r\n            <div className=\"description\">{task.description}</div>\r\n          </div>\r\n\r\n          <div class=\"ui small right floated icon buttons\">\r\n            <button class=\"ui button\" onClick={() => this.taskDelete(task)}><i class=\"red eraser icon\"></i></button>\r\n            <Link to={{pathname: `/tasks/${task.id}/edit`, state: {goal_name: goal.name}}}><button class=\"ui button\"><i class=\"black edit icon\"></i></button></Link>\r\n          </div>\r\n\r\n      </div>\r\n        ))\r\n\r\n    }\r\n\r\n    taskDelete(task) {\r\n      const { match: {params: { id }}} = this.props;\r\n      const url = `http://localhost:3001/api/v1/tasks/${task.id}`;\r\n\r\n        fetch(url, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n            .then(response => {\r\n              if (response.ok) {\r\n                return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n            })\r\n            .then(() => this.props.history.push(`/goals/${id}`))\r\n            .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n          const { goal } = this.state;\r\n          const goalTasks = goal.tasks\r\n          const goalID = goal.id\r\n\r\n          let taskList = \"No tasks created yet\";\r\n\r\n          const goalDone = (\r\n            <i className=\"ui circular olive right floated button\" onClick={this.markComplete}>Complete</i>\r\n          )\r\n          const goalNotDone = (\r\n            <i className=\"ui circular red right floated button\" onClick={this.markComplete}>Not Complete</i>\r\n          )\r\n          \r\n          \r\n    \r\n      return (\r\n          \r\n          <div className='Goals'>\r\n          <NavBar />\r\n\r\n                  <h1>Goal</h1>\r\n\r\n          <VirtualPet />\r\n\r\n              <div className=\"ui two column centered grid\">\r\n\r\n                  <div className=\"Main six wide column\">\r\n                    <div className=\"two ui buttons\">\r\n                        <Link to={`/goals/${goal.id}/edit`}><button className=\"ui yellow left attached button\" >\r\n                            Update Goal\r\n                        </button></Link>\r\n\r\n                        <button className=\"ui yellow right attached button\"  onClick={this.handleDelete}>\r\n                            Delete Goal\r\n                        </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"Main eight wide column\">\r\n                      <div className=\"ui segments\">\r\n                              <a className=\"ui small image\"> <img src={logo}/> </a>\r\n\r\n                              <div className=\"ui olive segment\">\r\n                                  <h2 class=\"ui header\">\r\n                                      {goal.completed === true ? goalDone : goalNotDone}\r\n                                      <div class=\"content\"> {goal.name} </div>\r\n                                  </h2>\r\n                              </div>\r\n\r\n                              <div className='ui horizontal segments'>\r\n                                <span class=\"ui olive segment\">\r\n                                  <i class=\"calendar outline icon\"></i>\r\n                                  {goal.date}\r\n                                </span>\r\n\r\n                                <span class=\"ui olive segment\">\r\n                                  <i class=\"clock outline icon\"></i>\r\n                                  {goal.time}\r\n                                </span>   \r\n                              </div>\r\n\r\n                                  <div className='ui olive secondary segment'>\r\n                                  <div className=\"ui header\">Info</div>\r\n                                  <div className=\"description\"> <p>{goal.info}</p> </div>\r\n                              \r\n                                  <a className=\"header\"> <h3>Tasks</h3></a>\r\n                                  <div className=\"ui divider\"></div>\r\n                                  \r\n                                    <Link to={{pathname: '/tasks/new', state: {goal_name: goal.name, goal_id: goalID}}}><button className=\"ui yellow basic fluid labeled icon button\">\r\n                                          <i className=\"plus icon\"></i>\r\n                                          New Task\r\n                                    </button></Link> \r\n\r\n                                  <div className= 'ui middle aligned divided list'>\r\n\r\n                                  {goalTasks.length > 0 ? this.grabTasks() : taskList}\r\n                                  </div>\r\n                              </div> \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n          </div>\r\n      );\r\n    }\r\n\r\n\r\n}\r\nexport default Goal;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goals.js",["112"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newForm.jsx",["113","114","115"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\n// import VirtualPet from './VirtualPet'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\nclass newForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            info: \"\",\r\n            date: \"\",\r\n            time: \"\",\r\n            completed: false,\r\n            user_id: 0,\r\n            tag_id: 0\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        // this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\r\n\r\n    }\r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value    \r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/api/v1/goals\";\r\n    const newGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(newGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\nrender() {      \r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n                <h1 className=\"ui yellow image header\">What will you accomplish today?</h1>\r\n\r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"twelve wide column\">\r\n\r\n                    <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                        \r\n                        <div className=\"field\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"Goal Name\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label>Info</label>\r\n                            <textarea rows=\"3\" name=\"info\" placeholder=\"Description\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"fields\">\r\n                            <div className=\"field\">\r\n                            <label>Date</label>\r\n                            <input type=\"date\" name=\"date\" onChange={this.onChange}/>\r\n                            </div>\r\n                            \r\n                            <div className=\"field\">\r\n                            <label>Time</label>\r\n                            <input type=\"time\" name=\"time\" onChange={this.onChange}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Add Goal</button>\r\n                        <div class=\"ui error message\"></div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default newForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateForm.jsx",["116","117","118","119"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\nclass updateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { goal: { tasks: [] }\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: {params: { id }}} = this.props;\r\n        \r\n          const url = `http://localhost:3001/api/v1/goals/${id}`;\r\n  \r\n          fetch(url)\r\n          .then(response => {\r\n              if (response.ok) {\r\n              return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ goal: response }))\r\n          .catch(() => this.props.history.push(`/goals/${id}`));\r\n      }\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            goal: {...this.state.goal, [event.target.name]: event.target.value }   \r\n            \r\n        });\r\n\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { match: {params: { id }}} = this.props;\r\n    const url = `http://localhost:3001/api/v1/goals/${id}`;\r\n    const updatedGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(updatedGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\n\r\nrender() {      \r\n    const { goal } = this.state;\r\n    const goalTasks = goal.tasks;\r\n\r\n    let taskList = \"No tasks created yet\";\r\n\r\n    const allTasks =  goalTasks.map((task, index) => (\r\n        <div className='Task item'>\r\n\r\n        <i className=\"right triangle icon\"></i>\r\n\r\n          <div className=\"content\">\r\n            <div className=\"header\">{task.name}</div>\r\n            <div className=\"description\">{task.description}</div>\r\n          </div>\r\n\r\n          <div class=\"ui small right floated icon buttons\">\r\n            <button class=\"ui button\"><i class=\"red eraser icon\"></i></button>\r\n            <button class=\"ui button\"><i class=\"black edit icon\"></i></button>\r\n          </div>\r\n\r\n      </div>\r\n        ))\r\n\r\n\r\n\r\n    return (\r\n\r\n        \r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n\r\n            <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                \r\n                <div className=\"ui centered grid\">\r\n\r\n                    <div className=\" Main ten wide column\">\r\n                        <div className=\"ui segments\">\r\n                            <a className=\"ui small image\"> <img src={logo}/> </a>\r\n\r\n                                <div className=\"ui olive segment\">\r\n                                    <h3 class=\"ui header\">\r\n                                        <div className=\"field\">\r\n                                            <label>Name</label>\r\n                                            <input type=\"text\" name=\"name\" value={this.state.goal.name} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='ui horizontal segments'>\r\n                                    <div className='ui olive segment'>\r\n                                        <div className=\"field\">\r\n                                            <i class=\"calendar outline icon\"></i><label>Date </label>\r\n                                            <input type=\"date\" name=\"date\" value={this.state.goal.date} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='ui olive segment'>\r\n                                        <div className=\"field\">\r\n                                            <i class=\"clock outline icon\"></i><label>Time </label>\r\n                                            <input type=\"time\" name=\"time\" value={this.state.goal.time} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='ui secondary olive segment'>\r\n                                    <div className=\"ui header\">Info</div>\r\n                                        <div className=\"field\">\r\n                                            <textarea rows=\"4\" name=\"info\" value={this.state.goal.info} onChange={this.onChange}/>\r\n                                        </div>\r\n\r\n                                    <div class=\"two ui buttons\">\r\n                                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Update Goal</button>\r\n                                        <Link to={`/goals/${this.state.goal.id}`}>\r\n                                            <button className=\"ui fluid large red submit button\">Go Back\r\n                                            </button></Link>\r\n                                    </div>\r\n\r\n                                    <div class=\"ui error message\"></div>\r\n                                \r\n                                    <div className=\"ui divider\"></div>\r\n                                    <a className=\"header\"> <h3>Tasks</h3> </a>\r\n\r\n                                    <div className= 'ui middle aligned divided list'>\r\n                                    {goal.tasks.length > 0 ? allTasks : taskList}\r\n                                  </div>\r\n                                </div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n            </form>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default updateForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newTaskForm.jsx",["120","121"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\n\r\n\r\nclass newTaskForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            description: \"\",\r\n            completed: false,\r\n            goal_id: this.props.location.state.goal_id,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n\r\n    }\r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value    \r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/api/v1/tasks\";\r\n    const newTask = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(newTask)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${this.state.goal_id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\nrender() {      \r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n            <div class=\"ui items\">\r\n                <h1 className=\"ui yellow image header\">Goal: {this.props.location.state.goal_name}</h1>\r\n            </div> \r\n\r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"twelve wide column\">\r\n\r\n                    <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                        \r\n                        <div className=\"field\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"Goal Name\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label>Extra Info</label>\r\n                            <textarea rows=\"3\" name=\"description\" placeholder=\"Description\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n\r\n                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Add Task</button>\r\n                        <div class=\"ui error message\"></div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default newTaskForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateTaskForm.jsx",["122","123"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\n\r\n\r\nclass updateTaskForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: []\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: {params: { id }}} = this.props;\r\n        \r\n          const url = `http://localhost:3001/api/v1/tasks/${id}`;\r\n  \r\n          fetch(url)\r\n          .then(response => {\r\n              if (response.ok) {\r\n              return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ task: response }))\r\n          .catch(() => this.props.history.push(`/tasks/${id}`));\r\n      }\r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            task: {...this.state.task, [event.target.name]: event.target.value }    \r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { match: {params: { id }}} = this.props;\r\n    const url = `http://localhost:3001/api/v1/tasks/${id}`;\r\n    const updatedTask = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(updatedTask)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${this.state.task.goal_id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\nrender() {      \r\n    return (\r\n        \r\n        <div className='Task'>\r\n        <NavBar />\r\n\r\n            <div class=\"ui items\">\r\n                <h1 className=\"ui yellow image header\">Goal: {this.props.location.state.goal_name}</h1>\r\n            </div> \r\n\r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"twelve wide column\">\r\n\r\n                    <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                        \r\n                        <div className=\"field\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" placeholder={this.state.task.name }onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label>Extra Info</label>\r\n                            <textarea rows=\"3\" name=\"description\" placeholder={this.state.task.description} onChange={this.onChange}/>\r\n                        </div>\r\n\r\n\r\n                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Update Task</button>\r\n                        <div class=\"ui error message\"></div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default updateTaskForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignUp.jsx",["124","125"],"import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/sprig logo.png'\r\n\r\n\r\nconst SignUp = (props) => {\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {\r\n  //         username: \"\",\r\n  //         email: \"\",\r\n  //         password: \"\",\r\n  //     };\r\n  //     this.onChange = this.onChange.bind(this);\r\n  //     this.onSubmit = this.onSubmit.bind(this);\r\n  // }\r\n  const [username, setUsername] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n//   onChange = (event) => {\r\n//     this.setState({ \r\n//         [event.target.name]: event.target.value    \r\n//     });\r\n// }\r\n\r\nconst handleUsernameChange = (evt) => {\r\n  setUsername(evt.target.value)\r\n}\r\n\r\nconst handleEmailChange = (evt) => {\r\n  setEmail(evt.target.value)\r\n}\r\n\r\nconst handlePasswordChange = (evt) => {\r\n  setPassword(evt.target.value)\r\n}\r\n\r\n\r\n  // onSubmit(event) {\r\n  // event.preventDefault();\r\n  // const url = \"http://localhost:3001/api/v1/users\";\r\n  // const newGoal = {...this.state}\r\n  // //-----------------------\r\n  // const reqObj = {\r\n  //   method: 'POST',\r\n  //   headers: {\r\n  //     'Content-Type': 'application/json'\r\n  //   },\r\n  //   body:  JSON.stringify(newGoal)\r\n  // }\r\n  // //------------------------------\r\n  // fetch(url, reqObj)\r\n  //     .then(response => {\r\n  //     if (response.ok) {\r\n  //         return response.json();\r\n  //     }\r\n  //     throw new Error(\"Network response was not ok.\");\r\n  //     })\r\n  //     .then(response => this.props.history.push(`/goals`))\r\n  //     .catch(error => console.log(error.message));\r\n  // }\r\n\r\n const  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/users\";\r\n    const newGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body:  JSON.stringify(newGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n        localStorage.setItem(\"token\", data.jwt)\r\n        props.handleLogin(data.user)\r\n        .then(response => props.history.push(`/goals`))\r\n        // .catch(error => console.log(error.message));\r\n    })\r\n    setUsername(\"\")\r\n    setEmail(\"\")\r\n    setPassword(\"\")\r\n    }\r\n\r\n\r\n  return (\r\n\r\n  <div className='SignUp'>\r\n\r\n    <h2 className=\"ui yellow image header\">\r\n      <img src={logo} className=\"image\"/>\r\n        <div className=\"content\">\r\n        Create a new Account\r\n        </div>\r\n    </h2>\r\n\r\n      <div className=\"ui two column centered grid\">\r\n        <div className=\"twelve wide column\">\r\n          \r\n          {/* <form className=\"ui form\" onSubmit={this.onSubmit}> */}\r\n          <form className=\"ui form\" onSubmit={onSubmit}>\r\n\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"user icon\"></i>\r\n                {/* <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange}/> */}\r\n                <input type=\"text\" name=\"username\" value={username} placeholder=\"Username\" onChange={handleUsernameChange}/>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"envelope icon\"></i>\r\n                {/* <input type=\"text\" name=\"email\" placeholder=\"E-mail address\" onChange={this.onChange}/> */}\r\n                <input type=\"text\" name=\"email\" value={email} placeholder=\"E-mail address\" onChange={handleEmailChange}/>\r\n              \r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"lock icon\"></i>\r\n                {/* <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/> */}\r\n                <input type=\"text\" name=\"password\" value={password} placeholder=\"Password\" onChange={handlePasswordChange}/>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"ui fluid large yellow submit button\">Create Account</div>\r\n            <div class=\"ui error message\"></div>\r\n          </form>\r\n\r\n        </div>\r\n      </div> \r\n  </div>\r\n\r\n  );\r\n  }\r\n\r\nexport default SignUp;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Login.jsx",["126","127"],"import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/sprig logo.png'\r\n\r\n\r\nconst Login = (props) => {\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {\r\n  //         username: \"\",\r\n  //         password: \"\",\r\n  //     };\r\n  //     this.onChange = this.onChange.bind(this);\r\n  //     this.onSubmit = this.onSubmit.bind(this);\r\n  // }\r\n\r\n  const [username, setUsername] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n\r\n//   onChange = (event) => {\r\n//     this.setState({ \r\n//         [event.target.name]: event.target.value    \r\n//     });\r\n// }\r\n\r\nconst handleUsernameChange = (evt) => {\r\n  setUsername(evt.target.value)\r\n}\r\n\r\nconst handlePasswordChange = (evt) => {\r\n  setPassword(evt.target.value)\r\n}\r\n\r\n  // onSubmit(event) {\r\n  // event.preventDefault();\r\n  // const url = \"http://localhost:3001/api/v1/users\";\r\n  // const newGoal = {...this.state}\r\n  // //-----------------------\r\n  // const reqObj = {\r\n  //   method: 'POST',\r\n  //   headers: {\r\n  //     'Content-Type': 'application/json',\r\n  //     \"Accept\": \"application/json\"\r\n  //   },\r\n  //   body:  JSON.stringify(newGoal)\r\n  // }\r\n  // //------------------------------\r\n  // fetch(url, reqObj)\r\n  // .then(resp => resp.json())\r\n  // .then(data => {\r\n  //     localStorage.setItem(\"token\", data.jwt)\r\n  //     this.props.handleLogin(data.user)\r\n  //     this.props.history.push(`/goals`)\r\n  // })\r\n\r\n      // .then(response => {\r\n      // if (response.ok) {\r\n      //     return response.json();\r\n      // }\r\n      // throw new Error(\"Network response was not ok.\");\r\n      // })\r\n      // .then(response => this.props.history.push(`/goals`))\r\n      // .catch(error => console.log(error.message));\r\n  // }\r\n\r\n  const onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/login\";\r\n    const newGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body:  JSON.stringify(newGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n        localStorage.setItem(\"token\", data.jwt)\r\n        props.handleLogin(data.user)\r\n        props.history.push(`/goals`)\r\n    })\r\n    setUsername(\"\")\r\n    setPassword(\"\")\r\n  }\r\n  \r\n  return (\r\n\r\n  <div className='Login'>\r\n\r\n    <h2 className=\"ui yellow image header\">\r\n      <img src={logo} className=\"image\"/>\r\n        <div className=\"content\">\r\n        Welcome Back!\r\n        </div>\r\n    </h2>\r\n\r\n      <div className=\"ui two column centered grid\">\r\n        <div className=\"twelve wide column\">\r\n          \r\n          {/* <form className=\"ui form\" onSubmit={this.onSubmit}> */}\r\n          <form className=\"ui form\" onSubmit={onSubmit}>\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"user icon\"></i>\r\n                {/* <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange}/> */}\r\n                <input type=\"text\" name=\"username\" value={username} placeholder=\"Username\" onChange={handleUsernameChange}/>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"lock icon\"></i>\r\n                {/* <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/> */}\r\n                <input type=\"password\" name=\"password\" value={password} placeholder=\"Password\" onChange={handlePasswordChange}/>\r\n\r\n              </div>\r\n            </div>\r\n\r\n          <div class=\"ui fluid large yellow submit button\">Login</div>\r\n            <div class=\"ui error message\"></div>\r\n          </form>\r\n\r\n        </div>\r\n      </div> \r\n  </div>\r\n\r\n  );\r\n  }\r\n\r\n\r\n\r\nexport default Login;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/LoginFormSection.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reportWebVitals.js",[],["128","129"],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":57,"column":13,"nodeType":"140","messageId":"141","endLine":57,"endColumn":19},{"ruleId":"142","severity":1,"message":"143","line":77,"column":17,"nodeType":"144","endLine":77,"endColumn":78},{"ruleId":"142","severity":1,"message":"143","line":16,"column":21,"nodeType":"144","endLine":16,"endColumn":73},{"ruleId":"145","severity":1,"message":"146","line":21,"column":17,"nodeType":"144","endLine":21,"endColumn":37},{"ruleId":"145","severity":1,"message":"146","line":22,"column":17,"nodeType":"144","endLine":22,"endColumn":37},{"ruleId":"145","severity":1,"message":"146","line":23,"column":17,"nodeType":"144","endLine":23,"endColumn":37},{"ruleId":"145","severity":1,"message":"146","line":33,"column":25,"nodeType":"144","endLine":33,"endColumn":44},{"ruleId":"134","severity":1,"message":"147","line":2,"column":8,"nodeType":"136","messageId":"137","endLine":2,"endColumn":16},{"ruleId":"134","severity":1,"message":"148","line":10,"column":5,"nodeType":"136","messageId":"137","endLine":10,"endColumn":14},{"ruleId":"134","severity":1,"message":"149","line":56,"column":17,"nodeType":"136","messageId":"137","endLine":56,"endColumn":26},{"ruleId":"134","severity":1,"message":"150","line":1,"column":13,"nodeType":"136","messageId":"137","endLine":1,"endColumn":20},{"ruleId":"151","severity":1,"message":"152","line":8,"column":1,"nodeType":"153","endLine":53,"endColumn":2},{"ruleId":"134","severity":1,"message":"154","line":10,"column":11,"nodeType":"136","messageId":"137","endLine":10,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":49,"column":8,"nodeType":"157","endLine":49,"endColumn":21,"suggestions":"158"},{"ruleId":"134","severity":1,"message":"159","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"160","line":2,"column":17,"nodeType":"136","messageId":"137","endLine":2,"endColumn":25},{"ruleId":"134","severity":1,"message":"159","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"161","line":8,"column":10,"nodeType":"136","messageId":"137","endLine":8,"endColumn":24},{"ruleId":"134","severity":1,"message":"162","line":108,"column":13,"nodeType":"136","messageId":"137","endLine":108,"endColumn":27},{"ruleId":"145","severity":1,"message":"146","line":194,"column":31,"nodeType":"144","endLine":194,"endColumn":61},{"ruleId":"142","severity":1,"message":"143","line":194,"column":62,"nodeType":"144","endLine":194,"endColumn":79},{"ruleId":"145","severity":1,"message":"146","line":219,"column":35,"nodeType":"144","endLine":219,"endColumn":57},{"ruleId":"134","severity":1,"message":"159","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"159","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"163","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":12},{"ruleId":"134","severity":1,"message":"159","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":111,"column":29,"nodeType":"144","endLine":111,"endColumn":59},{"ruleId":"142","severity":1,"message":"143","line":111,"column":60,"nodeType":"144","endLine":111,"endColumn":77},{"ruleId":"145","severity":1,"message":"146","line":154,"column":37,"nodeType":"144","endLine":154,"endColumn":59},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"159","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"134","severity":1,"message":"159","line":4,"column":8,"nodeType":"136","messageId":"137","endLine":4,"endColumn":14},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":97,"column":7,"nodeType":"144","endLine":97,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":2,"column":10,"nodeType":"136","messageId":"137","endLine":2,"endColumn":14},{"ruleId":"142","severity":1,"message":"143","line":97,"column":7,"nodeType":"144","endLine":97,"endColumn":42},{"ruleId":"130","replacedBy":"164"},{"ruleId":"132","replacedBy":"165"},"no-native-reassign",["166"],"no-negated-in-lhs",["167"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'ReactDOM' is defined but never used.","'container' is defined but never used.","'materials' is assigned a value but never used.","'BABYLON' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'pet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adaptToDeviceRatio', 'antialias', 'engineOptions', 'onRender', 'props', and 'sceneOptions'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["168"],"'Footer' is defined but never used.","'Redirect' is defined but never used.","'SetStateAction' is defined but never used.","'tasklistlength' is assigned a value but never used.","'logo' is defined but never used.",["166"],["167"],"no-global-assign","no-unsafe-negation",{"desc":"169","fix":"170"},"Update the dependencies array to be: [adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]",{"range":"171","text":"172"},[1514,1527],"[adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]"]