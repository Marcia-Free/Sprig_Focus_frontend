[{"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/index.js":"1","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/App.js":"2","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Home.js":"3","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/NavBar.js":"4","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Footer.js":"5","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/VirtualPet.js":"6","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SceneComponent.jsx":"7","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Complete.js":"8","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goal.js":"9","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goals.js":"10","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newForm.jsx":"11","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateForm.jsx":"12","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newTaskForm.jsx":"13","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateTaskForm.jsx":"14","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignUp.jsx":"15","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Login.jsx":"16","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/LoginFormSection.js":"17","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reportWebVitals.js":"18","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/index.js":"19","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/currentUser.js":"20","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/goals.js":"21","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/actions/auth.js":"22"},{"size":834,"mtime":1613332534073,"results":"23","hashOfConfig":"24"},{"size":1614,"mtime":1613337990943,"results":"25","hashOfConfig":"24"},{"size":1570,"mtime":1613345186884,"results":"26","hashOfConfig":"24"},{"size":3101,"mtime":1613346468472,"results":"27","hashOfConfig":"24"},{"size":317,"mtime":1613018513959,"results":"28","hashOfConfig":"24"},{"size":2406,"mtime":1613074488791,"results":"29","hashOfConfig":"24"},{"size":1601,"mtime":1612836272207,"results":"30","hashOfConfig":"24"},{"size":3412,"mtime":1613342427272,"results":"31","hashOfConfig":"24"},{"size":8488,"mtime":1613343077795,"results":"32","hashOfConfig":"24"},{"size":3666,"mtime":1613342147576,"results":"33","hashOfConfig":"24"},{"size":3368,"mtime":1613083382300,"results":"34","hashOfConfig":"24"},{"size":6254,"mtime":1613343753460,"results":"35","hashOfConfig":"24"},{"size":2713,"mtime":1613343419926,"results":"36","hashOfConfig":"24"},{"size":3231,"mtime":1613343544160,"results":"37","hashOfConfig":"24"},{"size":4382,"mtime":1613287618262,"results":"38","hashOfConfig":"24"},{"size":2805,"mtime":1613341292977,"results":"39","hashOfConfig":"24"},{"size":961,"mtime":1613283414453,"results":"40","hashOfConfig":"24"},{"size":362,"mtime":1613286408612,"results":"41","hashOfConfig":"24"},{"size":222,"mtime":1613332750616,"results":"42","hashOfConfig":"24"},{"size":343,"mtime":1613332837501,"results":"43","hashOfConfig":"24"},{"size":266,"mtime":1613337091131,"results":"44","hashOfConfig":"24"},{"size":212,"mtime":1613332898484,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"l1appl",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"48"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/index.js",[],["100","101"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/App.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Home.js",["102","103","104","105","106","107"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/NavBar.js",["108","109"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Footer.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/VirtualPet.js",["110","111","112"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Theme.css';\r\n\r\nimport'@babylonjs/loaders/glTF'\r\nimport * as BABYLON from \"@babylonjs/core/Legacy/legacy\";\r\nimport SceneComponent from './SceneComponent';\r\nimport { FreeCamera, Vector3, HemisphericLight, MeshBuilder } from '@babylonjs/core';\r\n\r\nlet container;\r\nlet box;\r\n\r\n\r\n\r\nclass VirtualPet extends React.Component {\r\n\r\n\r\n    \r\nrender() {\r\n\r\n    return (\r\n        \r\n        <div className='VirtualPet' >\r\n            <SceneComponent antialias onSceneReady={this.onSceneReady} onRender={this.onRender} id='my-canvas' />\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n    onSceneReady = scene => {\r\n\r\n           // Default Environment\r\n\r\n    \r\n        // This creates and positions a free camera (non-mesh)\r\n        var camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\r\n        // This targets the camera to scene origin\r\n        camera.setTarget(Vector3.Zero());\r\n        const canvas = scene.getEngine().getRenderingCanvas();\r\n        // This attaches the camera to the canvas\r\n        camera.attachControl(canvas, true);\r\n        \r\n        // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\r\n        var light = new HemisphericLight(\"light\", new Vector3(0, 1, 0), scene);\r\n        // Default intensity is 1. Let's dim the light a small amount\r\n        light.intensity = 0.7;\r\n\r\n        // Our built-in 'ground' shape.\r\n        MeshBuilder.CreateGround(\"ground\", {width: 25, height: 6}, scene);\r\n\r\n\r\n\r\n\r\n        BABYLON.SceneLoader.LoadAssetContainer(\"../models/\", \"sprig-wave.glb\", scene, function (container) {\r\n            var meshes = container.meshes;\r\n            var materials = container.materials;\r\n\r\n            const sprig = meshes[0]\r\n\r\n            scene.beforeRender = () => {\r\n                // sprig.position.y = 0;\r\n                sprig.rotation.y = .1;\r\n                sprig.rotationQuaternion = undefined;\r\n\r\n                }\r\n            // Adds all elements to the scene\r\n            container.addAllToScene();\r\n        });\r\n  }\r\n\r\n    //Will run on every frame render.  We are spinning the box on y-axis.\r\n    onRender = scene => {\r\n        if (box !== undefined) {\r\n        var deltaTimeInMillis = scene.getEngine().getDeltaTime();\r\n        const rpm = 10;\r\n        box.rotation.y += ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\r\n        }\r\n  }\r\n\r\n\r\n}\r\nexport default VirtualPet;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SceneComponent.jsx",["113","114","115","116"],"import * as BABYLON from \"@babylonjs/core/Legacy/legacy\";\r\nimport { Engine, Scene } from '@babylonjs/core'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\n\r\n\r\n\r\nexport default (props) => {\r\n    \r\n    const pet = document.querySelector('.VirtualPet')\r\n    const reactCanvas = useRef(null);\r\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\r\n\r\n      \r\n\r\n\r\n    useEffect(() => {\r\n        if (reactCanvas.current) {\r\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\r\n            const scene = new Scene(engine, sceneOptions);\r\n\r\n            if (scene.isReady()) {\r\n                props.onSceneReady(scene)\r\n                \r\n            } else {\r\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\r\n            }\r\n\r\n            engine.runRenderLoop(() => {\r\n                if (typeof onRender === 'function') {\r\n                    onRender(scene);\r\n                }\r\n                scene.render();\r\n            })\r\n            \r\n            const resize = () => {\r\n                scene.getEngine().resize();\r\n            }\r\n            if (window) {\r\n                window.addEventListener('resize', resize);\r\n            }\r\n            return () => {\r\n                scene.getEngine().dispose();\r\n                if (window) {\r\n                    window.removeEventListener('resize', resize);\r\n                }\r\n            }\r\n        }\r\n    }, [reactCanvas])\r\n    return (\r\n        <canvas ref={reactCanvas} {...rest} />\r\n    );\r\n}","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Complete.js",["117","118"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\nimport VirtualPet from './VirtualPet'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { currentUser } from '../actions/auth'\r\n\r\n\r\nclass Complete extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          goals: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.currentUser) {\r\n            this.props.history.push('/')\r\n        }\r\n\r\n        const url = \"http://localhost:3001/goals\";\r\n        fetch(url)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            }\r\n            throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ goals: response }))\r\n          .catch(() => this.props.history.push(\"/\"));\r\n    }\r\n\r\n\r\nrender() {\r\n        const { goals } = this.state;\r\n\r\n        const completedGoals = goals.filter((goal, index) => (\r\n            goal.completed === true\r\n        ));\r\n\r\n        const allGoals = completedGoals.map((goal, index) => (\r\n            <div className='GoalCard grey ui fluid card'>\r\n                <div className=\"content\">\r\n                    {/* <i class=\"right floated like icon\">{goal.tag_id}</i> */}\r\n                    <button class=\"circular ui right floated olive icon button\">\r\n                        <i class=\"check icon\"></i>\r\n                    </button>\r\n                    <div className=\"header\">{goal.name} <i class=\"small right floated list icon\"> {goal.tasks.length}</i></div>\r\n                </div>\r\n\r\n                <div className=\"black description\">\r\n                    {goal.info}\r\n                </div>\r\n\r\n                <div class=\"extra content\">\r\n                    <span class=\"left floated like\">\r\n                    <i class=\"calendar outline icon\"></i>\r\n                    {goal.date}\r\n                    </span>\r\n                    <span class=\"right floated star\">\r\n                    <i class=\"clock outline icon\"></i>\r\n                    {goal.time}\r\n                    </span>   \r\n                </div>\r\n                <Link to={`/goals/${goal.id}`}><div class=\"ui bottom attached button\">\r\n                    <i class=\"angle down icon\"></i>\r\n                    Details\r\n                </div></Link>\r\n                \r\n\r\n            </div>\r\n        ));\r\n\r\n        const noGoals = (\r\n            <div className='GoalCard ui header'>\r\n            <h4>\r\n                No goals completed yet.\r\n            </h4>\r\n            </div>\r\n        )\r\n\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n                <h1>Completed Goals</h1>\r\n\r\n        <VirtualPet />\r\n            <div className=\"ButtonColumn sixteen wide column\">\r\n            </div>\r\n  \r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"Main six wide column\">Placeholder</div>\r\n                <div className=\"Main eight wide column\">\r\n                    {goals.length > 0 ? allGoals : noGoals}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.currentUser,\r\n      goals: state.goals\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Complete);","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goal.js",["119","120","121","122","123","124","125","126"],"import React from 'react'\r\nimport { Link , Redirect} from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\nimport VirtualPet from './VirtualPet'\r\n\r\nimport logo from '../images/sprig logo.png'\r\nimport { SetStateAction } from '@babylonjs/core';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { currentUser } from '../actions/auth'\r\n\r\nclass Goal extends React.Component {\r\n  \r\n  \r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n          goal: { tasks: [] },\r\n          numoftasks: 0 };\r\n\r\n          this.handleDelete = this.handleDelete.bind(this);\r\n          this.markComplete = this.markComplete.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n      if (!this.props.currentUser) {\r\n        this.props.history.push('/')\r\n    }\r\n\r\n      const { match: {params: { id }}} = this.props;\r\n      \r\n        const url = `http://localhost:3001/goals/${id}`;\r\n\r\n        fetch(url)\r\n        .then(response => {\r\n            if (response.ok) {\r\n            return response.json();\r\n            }\r\n            throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.setState({ goal: response }))\r\n        .catch(() => this.props.history.push(\"/goals\"));\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n      \r\n      const tasklistlength = this.state.goal.tasks.length\r\n\r\n      if(prevState.numoftasks !== tasklistlength) {\r\n        console.log(prevState.numoftasks, tasklistlength)\r\n\r\n        this.setState({\r\n          numoftasks: tasklistlength\r\n        })\r\n      }\r\n    }\r\n\r\n    handleDelete() {\r\n      const { match: {params: { id }}} = this.props;\r\n      const { goal } = this.state;\r\n      \r\n      const correctPath = goal.completed === false ? '/goals' : '/completed'\r\n      const url = `http://localhost:3001/goals/${id}`;\r\n\r\n        fetch(url, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n            .then(response => {\r\n              if (response.ok) {\r\n                return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n            })\r\n            .then(() => this.props.history.push(correctPath))\r\n            .catch(error => console.log(error.message));\r\n\r\n    }\r\n\r\n    markComplete() {\r\n      const { match: {params: { id }}} = this.props;\r\n      const url = `http://localhost:3001/goals/${id}`;\r\n      \r\n       //-----------------------\r\n      const reqObj = {\r\n        method: 'PATCH',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body:  JSON.stringify({\r\n          completed: !this.state.goal.completed\r\n        })\r\n\r\n      }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n\r\n        this.setState({\r\n          goal: {...this.state.goal, completed: !this.state.goal.completed}\r\n        })\r\n\r\n    }\r\n\r\n    grabTasks() {\r\n      const { goal } = this.state;\r\n      const tasklistlength = goal.tasks.length\r\n\r\n      return goal.tasks.map((task, index) => (\r\n\r\n        <div className='Task item'>\r\n\r\n        <i className=\"right triangle icon\"></i>\r\n\r\n          <div className=\"content\">\r\n            <div className=\"header\">{task.name}</div>\r\n            <div className=\"description\">{task.description}</div>\r\n          </div>\r\n\r\n          <div class=\"ui small right floated icon buttons\">\r\n            <button class=\"ui button\" onClick={() => this.taskDelete(task)}><i class=\"red eraser icon\"></i></button>\r\n            <Link to={{pathname: `/tasks/${task.id}/edit`, state: {goal_name: goal.name}}}><button class=\"ui button\"><i class=\"black edit icon\"></i></button></Link>\r\n          </div>\r\n\r\n      </div>\r\n        ))\r\n\r\n    }\r\n\r\n    taskDelete(task) {\r\n      const { match: {params: { id }}} = this.props;\r\n      const url = `http://localhost:3001/tasks/${task.id}`;\r\n\r\n        fetch(url, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\"\r\n            }\r\n          })\r\n            .then(response => {\r\n              if (response.ok) {\r\n                return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n            })\r\n            .then(() => this.props.history.push(`/goals/${id}`))\r\n            .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n          const { goal } = this.state;\r\n          const goalTasks = goal.tasks\r\n          const goalID = goal.id\r\n\r\n          let taskList = \"No tasks created yet\";\r\n\r\n          const goalDone = (\r\n            <i className=\"ui circular olive right floated button\" onClick={this.markComplete}>Complete</i>\r\n          )\r\n          const goalNotDone = (\r\n            <i className=\"ui circular red right floated button\" onClick={this.markComplete}>Not Complete</i>\r\n          )\r\n          \r\n          \r\n    \r\n      return (\r\n          \r\n          <div className='Goals'>\r\n          <NavBar />\r\n\r\n                  <h1>Goal</h1>\r\n\r\n          <VirtualPet />\r\n\r\n              <div className=\"ui two column centered grid\">\r\n\r\n                  <div className=\"Main six wide column\">\r\n                    <div className=\"two ui buttons\">\r\n                        <Link to={`/goals/${goal.id}/edit`}><button className=\"ui yellow left attached button\" >\r\n                            Update Goal\r\n                        </button></Link>\r\n\r\n                        <button className=\"ui yellow right attached button\"  onClick={this.handleDelete}>\r\n                            Delete Goal\r\n                        </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"Main eight wide column\">\r\n                      <div className=\"ui segments\">\r\n                              <a className=\"ui small image\"> <img src={logo}/> </a>\r\n\r\n                              <div className=\"ui olive segment\">\r\n                                  <h2 class=\"ui header\">\r\n                                      {goal.completed === true ? goalDone : goalNotDone}\r\n                                      <div class=\"content\"> {goal.name} </div>\r\n                                  </h2>\r\n                              </div>\r\n\r\n                              <div className='ui horizontal segments'>\r\n                                <span class=\"ui olive segment\">\r\n                                  <i class=\"calendar outline icon\"></i>\r\n                                  {goal.date}\r\n                                </span>\r\n\r\n                                <span class=\"ui olive segment\">\r\n                                  <i class=\"clock outline icon\"></i>\r\n                                  {goal.time}\r\n                                </span>   \r\n                              </div>\r\n\r\n                                  <div className='ui olive secondary segment'>\r\n                                  <div className=\"ui header\">Info</div>\r\n                                  <div className=\"description\"> <p>{goal.info}</p> </div>\r\n                              \r\n                                  <a className=\"header\"> <h3>Tasks</h3></a>\r\n                                  <div className=\"ui divider\"></div>\r\n                                  \r\n                                    <Link to={{pathname: '/tasks/new', state: {goal_name: goal.name, goal_id: goalID}}}><button className=\"ui yellow basic fluid labeled icon button\">\r\n                                          <i className=\"plus icon\"></i>\r\n                                          New Task\r\n                                    </button></Link> \r\n\r\n                                  <div className= 'ui middle aligned divided list'>\r\n\r\n                                  {goalTasks.length > 0 ? this.grabTasks() : taskList}\r\n                                  </div>\r\n                              </div> \r\n                      </div>\r\n                  </div>\r\n              </div>\r\n\r\n          </div>\r\n      );\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentUser: state.currentUser,\r\n    goals: state.goals\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Goal);","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goals.js",["127","128"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\nimport VirtualPet from './VirtualPet'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { currentUser } from '../actions/auth'\r\n\r\n\r\nclass Goals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          goals: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (!this.props.currentUser) {\r\n            this.props.history.push('/')\r\n        }\r\n\r\n        const urlGoal = \"http://localhost:3001/goals\";\r\n        fetch(urlGoal)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            }\r\n            throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ goals: response }))\r\n          .catch(() => this.props.history.push(\"/\"));\r\n    }\r\n\r\n\r\n\r\nrender() {\r\n        const { goals } = this.state;\r\n\r\n\r\n        const currentGoals = goals.filter((goal, index) => (\r\n            goal.completed === false\r\n        ));\r\n\r\n        const allGoals = currentGoals.map((goal, index) => (\r\n            <div className='GoalCard grey ui fluid card'>\r\n                {/* key={goal.id} */}\r\n\r\n                <div className=\"content\">\r\n                    {/* <i class=\"right floated like icon\">{goal.tag_id}</i> */}\r\n                    {/* <button class=\"circular ui right floated olive icon button\">\r\n                        <i class=\"check icon\"></i>\r\n                    </button> */}\r\n                    <div className=\"header\">{goal.name} <i class=\"small right floated list icon\"> {goal.tasks.length}</i> </div>\r\n                </div>\r\n\r\n                <div className=\"black description\">\r\n                    {goal.info}\r\n                </div>\r\n\r\n                <div class=\"extra content\">\r\n                    <span class=\"left floated like\">\r\n                    <i class=\"calendar outline icon\"></i>\r\n                    {goal.date}\r\n                    </span>\r\n                    <span class=\"right floated star\">\r\n                    <i class=\"clock outline icon\"></i>\r\n                    {goal.time}\r\n                    </span>   \r\n                </div>\r\n                <Link to={`/goals/${goal.id}`}><div class=\"ui bottom attached button\">\r\n                    <i class=\"angle down icon\"></i>\r\n                    Details\r\n                </div></Link>\r\n                \r\n\r\n            </div>\r\n        ));\r\n\r\n\r\n\r\n        const noGoals = (\r\n            <div className='GoalCard ui header'>\r\n            <h4>\r\n                No goals yet. Why not add a new one?\r\n            </h4>\r\n            </div>\r\n        )\r\n\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n                <h1>Focus</h1>\r\n\r\n        <VirtualPet />\r\n\r\n  \r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"Main six wide column\">\r\n                  \r\n                        <Link to='/new'><button className=\"ui yellow fluid labeled icon button\">\r\n                            <i className=\"columns icon\"></i>\r\n                            Create Goal\r\n                        </button></Link>\r\n\r\n                </div>\r\n                <div className=\"Main eight wide column\">\r\n                    {goals.length > 0 ? allGoals : noGoals}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.currentUser,\r\n      goals: state.goals\r\n    }\r\n  }\r\n\r\n\r\n\r\nexport default connect(mapStateToProps)(Goals);","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newForm.jsx",["129","130","131"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\n// import VirtualPet from './VirtualPet'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\nclass newForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            info: \"\",\r\n            date: \"\",\r\n            time: \"\",\r\n            completed: false,\r\n            user_id: 0,\r\n            tag_id: 0\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        // this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\r\n\r\n    }\r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value    \r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/api/v1/goals\";\r\n    const newGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(newGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\nrender() {      \r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n                <h1 className=\"ui yellow image header\">What will you accomplish today?</h1>\r\n\r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"twelve wide column\">\r\n\r\n                    <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                        \r\n                        <div className=\"field\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"Goal Name\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label>Info</label>\r\n                            <textarea rows=\"3\" name=\"info\" placeholder=\"Description\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"fields\">\r\n                            <div className=\"field\">\r\n                            <label>Date</label>\r\n                            <input type=\"date\" name=\"date\" onChange={this.onChange}/>\r\n                            </div>\r\n                            \r\n                            <div className=\"field\">\r\n                            <label>Time</label>\r\n                            <input type=\"time\" name=\"time\" onChange={this.onChange}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Add Goal</button>\r\n                        <div class=\"ui error message\"></div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default newForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateForm.jsx",["132","133","134","135"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newTaskForm.jsx",["136","137"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateTaskForm.jsx",["138","139"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignUp.jsx",["140","141"],"import React, {useState} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/sprig logo.png'\r\n\r\n\r\nconst SignUp = (props) => {\r\n  // constructor(props) {\r\n  //     super(props);\r\n  //     this.state = {\r\n  //         username: \"\",\r\n  //         email: \"\",\r\n  //         password: \"\",\r\n  //     };\r\n  //     this.onChange = this.onChange.bind(this);\r\n  //     this.onSubmit = this.onSubmit.bind(this);\r\n  // }\r\n  const [username, setUsername] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n//   onChange = (event) => {\r\n//     this.setState({ \r\n//         [event.target.name]: event.target.value    \r\n//     });\r\n// }\r\n\r\nconst handleUsernameChange = (evt) => {\r\n  setUsername(evt.target.value)\r\n}\r\n\r\nconst handleEmailChange = (evt) => {\r\n  setEmail(evt.target.value)\r\n}\r\n\r\nconst handlePasswordChange = (evt) => {\r\n  setPassword(evt.target.value)\r\n}\r\n\r\n\r\n  // onSubmit(event) {\r\n  // event.preventDefault();\r\n  // const url = \"http://localhost:3001/api/v1/users\";\r\n  // const newGoal = {...this.state}\r\n  // //-----------------------\r\n  // const reqObj = {\r\n  //   method: 'POST',\r\n  //   headers: {\r\n  //     'Content-Type': 'application/json'\r\n  //   },\r\n  //   body:  JSON.stringify(newGoal)\r\n  // }\r\n  // //------------------------------\r\n  // fetch(url, reqObj)\r\n  //     .then(response => {\r\n  //     if (response.ok) {\r\n  //         return response.json();\r\n  //     }\r\n  //     throw new Error(\"Network response was not ok.\");\r\n  //     })\r\n  //     .then(response => this.props.history.push(`/goals`))\r\n  //     .catch(error => console.log(error.message));\r\n  // }\r\n\r\n const  onSubmit = (event) => {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/users\";\r\n    const newGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        \"Accept\": \"application/json\"\r\n      },\r\n      body:  JSON.stringify(newGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n    .then(resp => resp.json())\r\n    .then(data => {\r\n        localStorage.setItem(\"token\", data.jwt)\r\n        props.handleLogin(data.user)\r\n        .then(response => props.history.push(`/goals`))\r\n        // .catch(error => console.log(error.message));\r\n    })\r\n    setUsername(\"\")\r\n    setEmail(\"\")\r\n    setPassword(\"\")\r\n    }\r\n\r\n\r\n  return (\r\n\r\n  <div className='SignUp'>\r\n\r\n    <h2 className=\"ui yellow image header\">\r\n      <img src={logo} className=\"image\"/>\r\n        <div className=\"content\">\r\n        Create a new Account\r\n        </div>\r\n    </h2>\r\n\r\n      <div className=\"ui two column centered grid\">\r\n        <div className=\"twelve wide column\">\r\n          \r\n          {/* <form className=\"ui form\" onSubmit={this.onSubmit}> */}\r\n          <form className=\"ui form\" onSubmit={onSubmit}>\r\n\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"user icon\"></i>\r\n                {/* <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange}/> */}\r\n                <input type=\"text\" name=\"username\" value={username} placeholder=\"Username\" onChange={handleUsernameChange}/>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"envelope icon\"></i>\r\n                {/* <input type=\"text\" name=\"email\" placeholder=\"E-mail address\" onChange={this.onChange}/> */}\r\n                <input type=\"text\" name=\"email\" value={email} placeholder=\"E-mail address\" onChange={handleEmailChange}/>\r\n              \r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"lock icon\"></i>\r\n                {/* <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/> */}\r\n                <input type=\"text\" name=\"password\" value={password} placeholder=\"Password\" onChange={handlePasswordChange}/>\r\n\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"ui fluid large yellow submit button\">Create Account</div>\r\n            <div class=\"ui error message\"></div>\r\n          </form>\r\n\r\n        </div>\r\n      </div> \r\n  </div>\r\n\r\n  );\r\n  }\r\n\r\nexport default SignUp;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Login.jsx",["142","143"],"import React from 'react';\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport { loginSuccess } from '../actions/auth'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          username: \"\",\r\n          password: \"\",\r\n          error: \"\"\r\n      };\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  onChange = (event) => {\r\n    this.setState({ \r\n        [event.target.name]: event.target.value    \r\n    });\r\n}\r\n\r\n\r\n  onSubmit(event) {\r\n  event.preventDefault();\r\n  const url = \"http://localhost:3001//auth\";\r\n  const newUser = {...this.state}\r\n  //-----------------------\r\n  const reqObj = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body:  JSON.stringify(newUser)\r\n  }\r\n  //------------------------------\r\n  fetch(url, reqObj)\r\n  .then(resp => resp.json())\r\n    .then(data => {\r\n      if (data.error){\r\n        this.setState({\r\n          error: data.error\r\n        })\r\n      } else {\r\n        this.props.loginSuccess(data)\r\n        this.props.history.push('/goals')\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n    <div className='Login'>\r\n\r\n      <h2 className=\"ui yellow image header\">\r\n        <img src={logo} className=\"image\"/>\r\n          <div className=\"content\">\r\n          Welcome Back!\r\n          </div>\r\n      </h2>\r\n\r\n        <div className=\"ui two column centered grid\">\r\n          <div className=\"twelve wide column\">\r\n            \r\n            <form className=\"ui form\" onSubmit={this.onSubmit}>\r\n\r\n              <div class=\"field\">\r\n                <div class=\"ui left icon input\">\r\n                  <i class=\"user icon\"></i>\r\n                  <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange} value={this.state.username}/>\r\n                </div>\r\n              </div>\r\n\r\n              <div class=\"field\">\r\n                <div class=\"ui left icon input\">\r\n                  <i class=\"lock icon\"></i>\r\n                  <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange} value={this.state.password}/>\r\n                </div>\r\n              </div>\r\n\r\n            <input type='submit' class=\"ui fluid large yellow submit button\" value='login'></input>\r\n              <div class=\"ui error message\">\r\n              {this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n        </div> \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loginSuccess: loginSuccess\r\n}\r\n\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Login))","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/LoginFormSection.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reportWebVitals.js",[],["144","145"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/index.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/currentUser.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/goals.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/actions/auth.js",[],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":1,"column":28,"nodeType":"152","messageId":"153","endLine":1,"endColumn":37},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"155","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":12},{"ruleId":"150","severity":1,"message":"156","line":13,"column":12,"nodeType":"152","messageId":"153","endLine":13,"endColumn":16},{"ruleId":"157","severity":1,"message":"158","line":29,"column":13,"nodeType":"159","messageId":"160","endLine":29,"endColumn":19},{"ruleId":"161","severity":1,"message":"162","line":44,"column":17,"nodeType":"163","endLine":44,"endColumn":101},{"ruleId":"161","severity":1,"message":"162","line":26,"column":25,"nodeType":"163","endLine":26,"endColumn":77},{"ruleId":"161","severity":1,"message":"162","line":56,"column":25,"nodeType":"163","endLine":56,"endColumn":77},{"ruleId":"150","severity":1,"message":"164","line":2,"column":8,"nodeType":"152","messageId":"153","endLine":2,"endColumn":16},{"ruleId":"150","severity":1,"message":"165","line":10,"column":5,"nodeType":"152","messageId":"153","endLine":10,"endColumn":14},{"ruleId":"150","severity":1,"message":"166","line":56,"column":17,"nodeType":"152","messageId":"153","endLine":56,"endColumn":26},{"ruleId":"150","severity":1,"message":"167","line":1,"column":13,"nodeType":"152","messageId":"153","endLine":1,"endColumn":20},{"ruleId":"168","severity":1,"message":"169","line":8,"column":1,"nodeType":"170","endLine":53,"endColumn":2},{"ruleId":"150","severity":1,"message":"171","line":10,"column":11,"nodeType":"152","messageId":"153","endLine":10,"endColumn":14},{"ruleId":"172","severity":1,"message":"173","line":49,"column":8,"nodeType":"174","endLine":49,"endColumn":21,"suggestions":"175"},{"ruleId":"150","severity":1,"message":"176","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"177","line":8,"column":10,"nodeType":"152","messageId":"153","endLine":8,"endColumn":21},{"ruleId":"150","severity":1,"message":"178","line":2,"column":17,"nodeType":"152","messageId":"153","endLine":2,"endColumn":25},{"ruleId":"150","severity":1,"message":"176","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"179","line":8,"column":10,"nodeType":"152","messageId":"153","endLine":8,"endColumn":24},{"ruleId":"150","severity":1,"message":"177","line":11,"column":10,"nodeType":"152","messageId":"153","endLine":11,"endColumn":21},{"ruleId":"150","severity":1,"message":"180","line":119,"column":13,"nodeType":"152","messageId":"153","endLine":119,"endColumn":27},{"ruleId":"181","severity":1,"message":"182","line":205,"column":31,"nodeType":"163","endLine":205,"endColumn":61},{"ruleId":"161","severity":1,"message":"162","line":205,"column":62,"nodeType":"163","endLine":205,"endColumn":79},{"ruleId":"181","severity":1,"message":"182","line":230,"column":35,"nodeType":"163","endLine":230,"endColumn":57},{"ruleId":"150","severity":1,"message":"176","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"177","line":8,"column":10,"nodeType":"152","messageId":"153","endLine":8,"endColumn":21},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"176","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"155","line":7,"column":8,"nodeType":"152","messageId":"153","endLine":7,"endColumn":12},{"ruleId":"150","severity":1,"message":"176","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"181","severity":1,"message":"182","line":111,"column":29,"nodeType":"163","endLine":111,"endColumn":59},{"ruleId":"161","severity":1,"message":"162","line":111,"column":60,"nodeType":"163","endLine":111,"endColumn":77},{"ruleId":"181","severity":1,"message":"182","line":154,"column":37,"nodeType":"163","endLine":154,"endColumn":59},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"176","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"176","line":4,"column":8,"nodeType":"152","messageId":"153","endLine":4,"endColumn":14},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":97,"column":7,"nodeType":"163","endLine":97,"endColumn":42},{"ruleId":"150","severity":1,"message":"154","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"161","severity":1,"message":"162","line":64,"column":9,"nodeType":"163","endLine":64,"endColumn":44},{"ruleId":"146","replacedBy":"183"},{"ruleId":"148","replacedBy":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'logo' is defined but never used.","'user' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","'container' is defined but never used.","'materials' is assigned a value but never used.","'BABYLON' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'pet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adaptToDeviceRatio', 'antialias', 'engineOptions', 'onRender', 'props', and 'sceneOptions'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["187"],"'Footer' is defined but never used.","'currentUser' is defined but never used.","'Redirect' is defined but never used.","'SetStateAction' is defined but never used.","'tasklistlength' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",["185"],["186"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]",{"range":"190","text":"191"},[1514,1527],"[adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]"]