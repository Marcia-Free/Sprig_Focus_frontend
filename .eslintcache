[{"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/index.js":"1","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reportWebVitals.js":"2","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignUp.js":"3","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/App.js":"4","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Home.js":"5","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignIn.js":"6","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/NavBar.js":"7","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Footer.js":"8","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/VirtualPet.js":"9","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SceneComponent.jsx":"10","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Complete.js":"11","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goal.js":"12","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goals.js":"13","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newForm.jsx":"14","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateForm.jsx":"15","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newTaskForm.jsx":"16"},{"size":597,"mtime":1612851074294,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":1612371290690,"results":"19","hashOfConfig":"18"},{"size":2498,"mtime":1612928422204,"results":"20","hashOfConfig":"18"},{"size":1369,"mtime":1613083705951,"results":"21","hashOfConfig":"18"},{"size":1267,"mtime":1613072642502,"results":"22","hashOfConfig":"18"},{"size":278,"mtime":1612478417562,"results":"23","hashOfConfig":"18"},{"size":1270,"mtime":1613072538172,"results":"24","hashOfConfig":"18"},{"size":317,"mtime":1613018513959,"results":"25","hashOfConfig":"18"},{"size":2406,"mtime":1613074488791,"results":"26","hashOfConfig":"18"},{"size":1601,"mtime":1612836272207,"results":"27","hashOfConfig":"18"},{"size":3077,"mtime":1613077054354,"results":"28","hashOfConfig":"18"},{"size":7534,"mtime":1613084291034,"results":"29","hashOfConfig":"18"},{"size":3331,"mtime":1613077017921,"results":"30","hashOfConfig":"18"},{"size":3368,"mtime":1613083382300,"results":"31","hashOfConfig":"18"},{"size":6332,"mtime":1613081388575,"results":"32","hashOfConfig":"18"},{"size":3161,"mtime":1613084156762,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"l1appl",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"36"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/index.js",[],["76","77"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reportWebVitals.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignUp.js",["78"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/sprig logo.png'\r\n// import { loginSuccess } from '../actions/auth'\r\n\r\n\r\nclass SignUp extends React.Component {\r\n// state = {\r\n//     username: '',\r\n//     password: '',\r\n//     error: ''\r\n//   }\r\n\r\n//   handleInputChange = (e) => { \r\n//     this.setState({\r\n//       [e.target.name]: e.target.value\r\n//     })\r\n//   }\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault()\r\n\r\n//     const reqObj = {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json'\r\n//       },\r\n//       body:  JSON.stringify(this.state)\r\n//     }\r\n//     fetch('http://localhost:3000/api/v1/auth', reqObj)\r\n//     .then(resp => resp.json())\r\n//     .then(data => {\r\n//       if (data.error){\r\n//         this.setState({\r\n//           error: data.error\r\n//         })\r\n//       } else {\r\n//         localStorage.setItem('jwt_token', data.token)\r\n\r\n\r\n//         this.props.loginSuccess(data.user)\r\n//         this.props.history.push('/dashboard')\r\n//       }\r\n//     })\r\n//   }\r\n\r\n\r\nrender() {\r\n  return (\r\n\r\n  <div className='SignUp' >\r\n\r\n    <h1>Sign Up</h1>\r\n    <h2 className=\"ui yellow image header\">\r\n      <img src={logo} className=\"image\"/>\r\n        <div className=\"content\">\r\n        Log-in to your account\r\n        </div>\r\n    </h2>\r\n\r\n      <div className=\"ui two column centered grid\">\r\n        <div className=\"twelve wide column\">\r\n          <form className=\"ui form\">\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"user icon\"></i>\r\n                <input type=\"text\" name=\"username\" placeholder=\"Username\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"envelope icon\"></i>\r\n                <input type=\"text\" name=\"email\" placeholder=\"E-mail address\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <div class=\"field\">\r\n              <div class=\"ui left icon input\">\r\n                <i class=\"lock icon\"></i>\r\n                <input type=\"password\" name=\"password\" placeholder=\"Password\"/>\r\n              </div>\r\n            </div>\r\n\r\n            <Link to='/goals'><div class=\"ui fluid large yellow submit button\">Login</div></Link>\r\n            <div class=\"ui error message\"></div>\r\n          </form>\r\n\r\n        </div>\r\n      </div> \r\n  </div>\r\n\r\n  );\r\n  }\r\n\r\n\r\n  }\r\nexport default SignUp;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/App.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Home.js",["79"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/sprig logo.png'\r\n\r\nclass Home extends React.Component {\r\n\r\nrender() {\r\n    return (\r\n        <div className='Home'>\r\n            \r\n            <div class=\"ui divider\">\r\n            </div>\r\n\r\n            <div>\r\n                <h1>Sprig Goals</h1>\r\n                <img class=\"ui big centered circular image\" src={logo}></img>\r\n            </div>\r\n\r\n\r\n\r\n            <div class=\"ui placeholder segment\">\r\n                <div class=\"ui two column stackable center aligned grid\">\r\n                    <div class=\"ui vertical divider\">Or</div>\r\n\r\n                    <div class=\"column\">\r\n                        <i class=\"huge orange user plus icon\"></i>\r\n                        <Link to='/signup'> <button className=\"ui yellow large button\">New User</button></Link>  \r\n                    </div>\r\n                    <div class=\"column\">\r\n                        <i class=\"huge orange users icon\"></i>\r\n                        <Link to='/signin'><button className=\"ui yellow large button\">Existing User</button></Link>\r\n                    </div>\r\n\r\n                </div>\r\n                \r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default Home;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignIn.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/NavBar.js",["80","81","82","83","84"],"import React from 'react'\r\nimport logo from '../images/sprig logo.png'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass NavBar extends React.Component {\r\n\r\n\r\n\r\n\r\nrender() {\r\n    return (\r\n        <div className='NavBar'>\r\n            <div className=\"ui mini menu\">\r\n\r\n                <div className=\"ui dropdown icon item\">\r\n                    <img className=\"ui mini circular image\" src={logo}/>\r\n                    <i className=\"dropdown icon\"></i>\r\n                </div>\r\n\r\n\r\n                <a className=\"item\">Welcome, User</a>\r\n                <a className=\"item\"><Link to='/goals'>Goals</Link></a>\r\n                <a className=\"item\"><Link to='/completed'>Completed</Link></a>\r\n\r\n\r\n                <div class=\"right menu\">\r\n                    <div class=\"item\">\r\n                        <div class=\"ui icon input\">\r\n                            <input type=\"text\" placeholder=\"Search...\"/>\r\n                            <i class=\"search link icon\"></i>\r\n                        </div>\r\n                    </div>\r\n                        <a class=\"ui item\"><Link to='/'>Sign Out</Link></a>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"ui divider\">\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default NavBar;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Footer.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/VirtualPet.js",["85","86","87"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './Theme.css';\r\n\r\nimport'@babylonjs/loaders/glTF'\r\nimport * as BABYLON from \"@babylonjs/core/Legacy/legacy\";\r\nimport SceneComponent from './SceneComponent';\r\nimport { FreeCamera, Vector3, HemisphericLight, MeshBuilder } from '@babylonjs/core';\r\n\r\nlet container;\r\nlet box;\r\n\r\n\r\n\r\nclass VirtualPet extends React.Component {\r\n\r\n\r\n    \r\nrender() {\r\n\r\n    return (\r\n        \r\n        <div className='VirtualPet' >\r\n            <SceneComponent antialias onSceneReady={this.onSceneReady} onRender={this.onRender} id='my-canvas' />\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n    onSceneReady = scene => {\r\n\r\n           // Default Environment\r\n\r\n    \r\n        // This creates and positions a free camera (non-mesh)\r\n        var camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\r\n        // This targets the camera to scene origin\r\n        camera.setTarget(Vector3.Zero());\r\n        const canvas = scene.getEngine().getRenderingCanvas();\r\n        // This attaches the camera to the canvas\r\n        camera.attachControl(canvas, true);\r\n        \r\n        // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\r\n        var light = new HemisphericLight(\"light\", new Vector3(0, 1, 0), scene);\r\n        // Default intensity is 1. Let's dim the light a small amount\r\n        light.intensity = 0.7;\r\n\r\n        // Our built-in 'ground' shape.\r\n        MeshBuilder.CreateGround(\"ground\", {width: 25, height: 6}, scene);\r\n\r\n\r\n\r\n\r\n        BABYLON.SceneLoader.LoadAssetContainer(\"../models/\", \"sprig-wave.glb\", scene, function (container) {\r\n            var meshes = container.meshes;\r\n            var materials = container.materials;\r\n\r\n            const sprig = meshes[0]\r\n\r\n            scene.beforeRender = () => {\r\n                // sprig.position.y = 0;\r\n                sprig.rotation.y = .1;\r\n                sprig.rotationQuaternion = undefined;\r\n\r\n                }\r\n            // Adds all elements to the scene\r\n            container.addAllToScene();\r\n        });\r\n  }\r\n\r\n    //Will run on every frame render.  We are spinning the box on y-axis.\r\n    onRender = scene => {\r\n        if (box !== undefined) {\r\n        var deltaTimeInMillis = scene.getEngine().getDeltaTime();\r\n        const rpm = 10;\r\n        box.rotation.y += ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\r\n        }\r\n  }\r\n\r\n\r\n}\r\nexport default VirtualPet;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SceneComponent.jsx",["88","89","90","91"],"import * as BABYLON from \"@babylonjs/core/Legacy/legacy\";\r\nimport { Engine, Scene } from '@babylonjs/core'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\n\r\n\r\n\r\nexport default (props) => {\r\n    \r\n    const pet = document.querySelector('.VirtualPet')\r\n    const reactCanvas = useRef(null);\r\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\r\n\r\n      \r\n\r\n\r\n    useEffect(() => {\r\n        if (reactCanvas.current) {\r\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\r\n            const scene = new Scene(engine, sceneOptions);\r\n\r\n            if (scene.isReady()) {\r\n                props.onSceneReady(scene)\r\n                \r\n            } else {\r\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\r\n            }\r\n\r\n            engine.runRenderLoop(() => {\r\n                if (typeof onRender === 'function') {\r\n                    onRender(scene);\r\n                }\r\n                scene.render();\r\n            })\r\n            \r\n            const resize = () => {\r\n                scene.getEngine().resize();\r\n            }\r\n            if (window) {\r\n                window.addEventListener('resize', resize);\r\n            }\r\n            return () => {\r\n                scene.getEngine().dispose();\r\n                if (window) {\r\n                    window.removeEventListener('resize', resize);\r\n                }\r\n            }\r\n        }\r\n    }, [reactCanvas])\r\n    return (\r\n        <canvas ref={reactCanvas} {...rest} />\r\n    );\r\n}","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Complete.js",["92"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\nimport VirtualPet from './VirtualPet'\r\n\r\n\r\nclass Complete extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          goals: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const url = \"http://localhost:3001/api/v1/goals\";\r\n        fetch(url)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            }\r\n            throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ goals: response }))\r\n          .catch(() => this.props.history.push(\"/\"));\r\n    }\r\n\r\n\r\nrender() {\r\n        const { goals } = this.state;\r\n\r\n        const completedGoals = goals.filter((goal, index) => (\r\n            goal.completed === true\r\n        ));\r\n\r\n        const allGoals = completedGoals.map((goal, index) => (\r\n            <div className='GoalCard grey ui fluid card'>\r\n                <div className=\"content\">\r\n                    {/* <i class=\"right floated like icon\">{goal.tag_id}</i> */}\r\n                    <button class=\"circular ui right floated olive icon button\">\r\n                        <i class=\"check icon\"></i>\r\n                    </button>\r\n                    <div className=\"header\">{goal.name} <i class=\"small right floated list icon\"> {goal.tasks.length}</i></div>\r\n                </div>\r\n\r\n                <div className=\"black description\">\r\n                    {goal.info}\r\n                </div>\r\n\r\n                <div class=\"extra content\">\r\n                    <span class=\"left floated like\">\r\n                    <i class=\"calendar outline icon\"></i>\r\n                    {goal.date}\r\n                    </span>\r\n                    <span class=\"right floated star\">\r\n                    <i class=\"clock outline icon\"></i>\r\n                    {goal.time}\r\n                    </span>   \r\n                </div>\r\n                <Link to={`/goals/${goal.id}`}><div class=\"ui bottom attached button\">\r\n                    <i class=\"angle down icon\"></i>\r\n                    Details\r\n                </div></Link>\r\n                \r\n\r\n            </div>\r\n        ));\r\n\r\n        const noGoals = (\r\n            <div className='GoalCard ui header'>\r\n            <h4>\r\n                No goals completed yet.\r\n            </h4>\r\n            </div>\r\n        )\r\n\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n                <h1>Completed Goals</h1>\r\n\r\n        <VirtualPet />\r\n            <div className=\"ButtonColumn sixteen wide column\">\r\n            </div>\r\n  \r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"Main six wide column\">Placeholder</div>\r\n                <div className=\"Main eight wide column\">\r\n                    {goals.length > 0 ? allGoals : noGoals}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default Complete;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goal.js",["93","94","95","96","97","98","99"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goals.js",["100"],"import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\nimport VirtualPet from './VirtualPet'\r\n\r\n\r\nclass Goals extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          goals: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const urlGoal = \"http://localhost:3001/api/v1/goals\";\r\n        fetch(urlGoal)\r\n          .then(response => {\r\n            if (response.ok) {\r\n              return response.json();\r\n            }\r\n            throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ goals: response }))\r\n          .catch(() => this.props.history.push(\"/\"));\r\n\r\n    }\r\n\r\n\r\n\r\nrender() {\r\n        const { goals } = this.state;\r\n\r\n\r\n        const currentGoals = goals.filter((goal, index) => (\r\n            goal.completed === false\r\n        ));\r\n\r\n        const allGoals = currentGoals.map((goal, index) => (\r\n            <div className='GoalCard grey ui fluid card'>\r\n                {/* key={goal.id} */}\r\n\r\n                <div className=\"content\">\r\n                    {/* <i class=\"right floated like icon\">{goal.tag_id}</i> */}\r\n                    {/* <button class=\"circular ui right floated olive icon button\">\r\n                        <i class=\"check icon\"></i>\r\n                    </button> */}\r\n                    <div className=\"header\">{goal.name} <i class=\"small right floated list icon\"> {goal.tasks.length}</i> </div>\r\n                </div>\r\n\r\n                <div className=\"black description\">\r\n                    {goal.info}\r\n                </div>\r\n\r\n                <div class=\"extra content\">\r\n                    <span class=\"left floated like\">\r\n                    <i class=\"calendar outline icon\"></i>\r\n                    {goal.date}\r\n                    </span>\r\n                    <span class=\"right floated star\">\r\n                    <i class=\"clock outline icon\"></i>\r\n                    {goal.time}\r\n                    </span>   \r\n                </div>\r\n                <Link to={`/goals/${goal.id}`}><div class=\"ui bottom attached button\">\r\n                    <i class=\"angle down icon\"></i>\r\n                    Details\r\n                </div></Link>\r\n                \r\n\r\n            </div>\r\n        ));\r\n\r\n\r\n\r\n        const noGoals = (\r\n            <div className='GoalCard ui header'>\r\n            <h4>\r\n                No goals yet. Why not add a new one?\r\n            </h4>\r\n            </div>\r\n        )\r\n\r\n\r\n    \r\n\r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n                <h1>Focus</h1>\r\n\r\n        <VirtualPet />\r\n\r\n  \r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"Main six wide column\">\r\n                  \r\n                        <Link to='/new'><button className=\"ui yellow fluid labeled icon button\">\r\n                            <i className=\"columns icon\"></i>\r\n                            Create Goal\r\n                        </button></Link>\r\n\r\n                </div>\r\n                <div className=\"Main eight wide column\">\r\n                    {goals.length > 0 ? allGoals : noGoals}\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default Goals;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newForm.jsx",["101","102","103"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\n// import VirtualPet from './VirtualPet'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\nclass newForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            info: \"\",\r\n            date: \"\",\r\n            time: \"\",\r\n            completed: false,\r\n            user_id: 0,\r\n            tag_id: 0\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        // this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\r\n\r\n    }\r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value    \r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/api/v1/goals\";\r\n    const newGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(newGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\nrender() {      \r\n    return (\r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n                <h1 className=\"ui yellow image header\">What will you accomplish today?</h1>\r\n\r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"twelve wide column\">\r\n\r\n                    <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                        \r\n                        <div className=\"field\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"Goal Name\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label>Info</label>\r\n                            <textarea rows=\"3\" name=\"info\" placeholder=\"Description\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"fields\">\r\n                            <div className=\"field\">\r\n                            <label>Date</label>\r\n                            <input type=\"date\" name=\"date\" onChange={this.onChange}/>\r\n                            </div>\r\n                            \r\n                            <div className=\"field\">\r\n                            <label>Time</label>\r\n                            <input type=\"time\" name=\"time\" onChange={this.onChange}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Add Goal</button>\r\n                        <div class=\"ui error message\"></div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default newForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateForm.jsx",["104","105","106","107"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nimport NavBar from './NavBar'\r\nimport Footer from './Footer'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\nclass updateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { goal: { tasks: [] }\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        // this.stripHtmlEntities = this.stripHtmlEntities.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: {params: { id }}} = this.props;\r\n        \r\n          const url = `http://localhost:3001/api/v1/goals/${id}`;\r\n  \r\n          fetch(url)\r\n          .then(response => {\r\n              if (response.ok) {\r\n              return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ goal: response }))\r\n          .catch(() => this.props.history.push(`/goals/${id}`));\r\n      }\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            goal: {...this.state.goal, [event.target.name]: event.target.value }   \r\n            \r\n        });\r\n\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { match: {params: { id }}} = this.props;\r\n    const url = `http://localhost:3001/api/v1/goals/${id}`;\r\n    const updatedGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(updatedGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\n\r\nrender() {      \r\n    const { goal } = this.state;\r\n    const goalTasks = goal.tasks;\r\n\r\n    let taskList = \"No tasks created yet\";\r\n\r\n    const allTasks =  goalTasks.map((task, index) => (\r\n        <div className='Task item'>\r\n\r\n        <i className=\"right triangle icon\"></i>\r\n\r\n          <div className=\"content\">\r\n            <div className=\"header\">{task.name}</div>\r\n            <div className=\"description\">{task.description}</div>\r\n          </div>\r\n\r\n          <div class=\"ui small right floated icon buttons\">\r\n            <button class=\"ui button\"><i class=\"red eraser icon\"></i></button>\r\n            <button class=\"ui button\"><i class=\"black edit icon\"></i></button>\r\n          </div>\r\n\r\n      </div>\r\n        ))\r\n\r\n\r\n\r\n    return (\r\n\r\n        \r\n        \r\n        <div className='Goals'>\r\n        <NavBar />\r\n\r\n\r\n            <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                \r\n                <div className=\"ui centered grid\">\r\n\r\n                    <div className=\" Main ten wide column\">\r\n                        <div className=\"ui segments\">\r\n                            <a className=\"ui small image\"> <img src={logo}/> </a>\r\n\r\n                                <div className=\"ui olive segment\">\r\n                                    <h3 class=\"ui header\">\r\n                                        <div className=\"field\">\r\n                                            <label>Name</label>\r\n                                            <input type=\"text\" name=\"name\" value={this.state.goal.name} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='ui horizontal segments'>\r\n                                    <div className='ui olive segment'>\r\n                                        <div className=\"field\">\r\n                                            <i class=\"calendar outline icon\"></i><label>Date </label>\r\n                                            <input type=\"date\" name=\"date\" value={this.state.goal.date} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='ui olive segment'>\r\n                                        <div className=\"field\">\r\n                                            <i class=\"clock outline icon\"></i><label>Time </label>\r\n                                            <input type=\"time\" name=\"time\" value={this.state.goal.time} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='ui secondary olive segment'>\r\n                                    <div className=\"ui header\">Info</div>\r\n                                        <div className=\"field\">\r\n                                            <textarea rows=\"4\" name=\"info\" value={this.state.goal.info} onChange={this.onChange}/>\r\n                                        </div>\r\n\r\n                                    <div class=\"two ui buttons\">\r\n                                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Update Goal</button>\r\n                                        <Link to={`/goals/${this.state.goal.id}`}>\r\n                                            <button className=\"ui fluid large red submit button\">Go Back\r\n                                            </button></Link>\r\n                                    </div>\r\n\r\n                                    <div class=\"ui error message\"></div>\r\n                                \r\n                                    <div className=\"ui divider\"></div>\r\n                                    <a className=\"header\"> <h3>Tasks</h3> </a>\r\n\r\n                                    <div className= 'ui middle aligned divided list'>\r\n                                    {goal.tasks.length > 0 ? allTasks : taskList}\r\n                                  </div>\r\n                                </div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n            </form>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default updateForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newTaskForm.jsx",["108","109"],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":55,"column":7,"nodeType":"116","endLine":55,"endColumn":42},{"ruleId":"114","severity":1,"message":"115","line":16,"column":17,"nodeType":"116","endLine":16,"endColumn":72},{"ruleId":"114","severity":1,"message":"115","line":16,"column":21,"nodeType":"116","endLine":16,"endColumn":73},{"ruleId":"117","severity":1,"message":"118","line":21,"column":17,"nodeType":"116","endLine":21,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":22,"column":17,"nodeType":"116","endLine":22,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":23,"column":17,"nodeType":"116","endLine":23,"endColumn":37},{"ruleId":"117","severity":1,"message":"118","line":33,"column":25,"nodeType":"116","endLine":33,"endColumn":44},{"ruleId":"119","severity":1,"message":"120","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":16},{"ruleId":"119","severity":1,"message":"123","line":10,"column":5,"nodeType":"121","messageId":"122","endLine":10,"endColumn":14},{"ruleId":"119","severity":1,"message":"124","line":56,"column":17,"nodeType":"121","messageId":"122","endLine":56,"endColumn":26},{"ruleId":"119","severity":1,"message":"125","line":1,"column":13,"nodeType":"121","messageId":"122","endLine":1,"endColumn":20},{"ruleId":"126","severity":1,"message":"127","line":8,"column":1,"nodeType":"128","endLine":53,"endColumn":2},{"ruleId":"119","severity":1,"message":"129","line":10,"column":11,"nodeType":"121","messageId":"122","endLine":10,"endColumn":14},{"ruleId":"130","severity":1,"message":"131","line":49,"column":8,"nodeType":"132","endLine":49,"endColumn":21,"suggestions":"133"},{"ruleId":"119","severity":1,"message":"134","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":14},{"ruleId":"119","severity":1,"message":"135","line":2,"column":17,"nodeType":"121","messageId":"122","endLine":2,"endColumn":25},{"ruleId":"119","severity":1,"message":"134","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":14},{"ruleId":"119","severity":1,"message":"136","line":8,"column":10,"nodeType":"121","messageId":"122","endLine":8,"endColumn":24},{"ruleId":"119","severity":1,"message":"137","line":92,"column":33,"nodeType":"121","messageId":"122","endLine":92,"endColumn":35},{"ruleId":"117","severity":1,"message":"118","line":172,"column":31,"nodeType":"116","endLine":172,"endColumn":61},{"ruleId":"114","severity":1,"message":"115","line":172,"column":62,"nodeType":"116","endLine":172,"endColumn":79},{"ruleId":"117","severity":1,"message":"118","line":197,"column":35,"nodeType":"116","endLine":197,"endColumn":57},{"ruleId":"119","severity":1,"message":"134","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":14},{"ruleId":"119","severity":1,"message":"138","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"134","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":14},{"ruleId":"119","severity":1,"message":"139","line":7,"column":8,"nodeType":"121","messageId":"122","endLine":7,"endColumn":12},{"ruleId":"119","severity":1,"message":"134","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":14},{"ruleId":"117","severity":1,"message":"118","line":112,"column":29,"nodeType":"116","endLine":112,"endColumn":59},{"ruleId":"114","severity":1,"message":"115","line":112,"column":60,"nodeType":"116","endLine":112,"endColumn":77},{"ruleId":"117","severity":1,"message":"118","line":155,"column":37,"nodeType":"116","endLine":155,"endColumn":59},{"ruleId":"119","severity":1,"message":"138","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":14},{"ruleId":"119","severity":1,"message":"134","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":14},"no-native-reassign",["140"],"no-negated-in-lhs",["141"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'container' is defined but never used.","'materials' is assigned a value but never used.","'BABYLON' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'pet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adaptToDeviceRatio', 'antialias', 'engineOptions', 'onRender', 'props', and 'sceneOptions'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["142"],"'Footer' is defined but never used.","'Redirect' is defined but never used.","'SetStateAction' is defined but never used.","'id' is assigned a value but never used.","'Link' is defined but never used.","'logo' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"143","fix":"144"},"Update the dependencies array to be: [adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]",{"range":"145","text":"146"},[1514,1527],"[adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]"]