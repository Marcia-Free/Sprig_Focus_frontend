[{"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/index.js":"1","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/App.js":"2","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Home.js":"3","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/NavBar.js":"4","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Footer.js":"5","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/VirtualPet.js":"6","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SceneComponent.jsx":"7","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Complete.js":"8","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goal.js":"9","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goals.js":"10","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newForm.jsx":"11","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateForm.jsx":"12","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newTaskForm.jsx":"13","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateTaskForm.jsx":"14","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignUp.jsx":"15","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Login.jsx":"16","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/LoginFormSection.js":"17","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reportWebVitals.js":"18","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/index.js":"19","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/currentUser.js":"20","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/goals.js":"21","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/actions/auth.js":"22"},{"size":834,"mtime":1613332534073,"results":"23","hashOfConfig":"24"},{"size":1798,"mtime":1613362627254,"results":"25","hashOfConfig":"24"},{"size":1518,"mtime":1613361379912,"results":"26","hashOfConfig":"24"},{"size":3109,"mtime":1613362668210,"results":"27","hashOfConfig":"24"},{"size":317,"mtime":1613018513959,"results":"28","hashOfConfig":"24"},{"size":2577,"mtime":1613362557818,"results":"29","hashOfConfig":"24"},{"size":1601,"mtime":1612836272207,"results":"30","hashOfConfig":"24"},{"size":3273,"mtime":1613362745367,"results":"31","hashOfConfig":"24"},{"size":8308,"mtime":1613362717941,"results":"32","hashOfConfig":"24"},{"size":3595,"mtime":1613362706882,"results":"33","hashOfConfig":"24"},{"size":3446,"mtime":1613361570795,"results":"34","hashOfConfig":"24"},{"size":6170,"mtime":1613361623932,"results":"35","hashOfConfig":"24"},{"size":2631,"mtime":1613361673214,"results":"36","hashOfConfig":"24"},{"size":3149,"mtime":1613361704652,"results":"37","hashOfConfig":"24"},{"size":3579,"mtime":1613359373754,"results":"38","hashOfConfig":"24"},{"size":2844,"mtime":1613355195394,"results":"39","hashOfConfig":"24"},{"size":961,"mtime":1613283414453,"results":"40","hashOfConfig":"24"},{"size":362,"mtime":1613286408612,"results":"41","hashOfConfig":"24"},{"size":222,"mtime":1613332750616,"results":"42","hashOfConfig":"24"},{"size":343,"mtime":1613332837501,"results":"43","hashOfConfig":"24"},{"size":266,"mtime":1613337091131,"results":"44","hashOfConfig":"24"},{"size":212,"mtime":1613332898484,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"l1appl",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"48"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"48"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/index.js",[],["101","102"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/App.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Home.js",["103","104","105","106","107","108"],"  import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport logo from '../images/sprig logo.png'\r\n\r\nimport FormSection from './LoginFormSection'\r\n\r\nimport SignUp from './SignUp'\r\nimport Login from './Login'\r\n\r\nconst  Home = (props) => {\r\n\r\n    const [user, setUser] = useState({})\r\n    const [form, setForm] = useState(\"\")\r\n    \r\n\r\n      const handleLogin = (user) => {\r\n        setUser(user)\r\n      }\r\n    \r\n      const handleFormSwitch = (input) => {\r\n        setForm(input)\r\n      }\r\n\r\n      const renderForm = () => {\r\n        switch(form){\r\n          case \"login\":\r\n            return <Login handleLogin={handleLogin}/>\r\n            break;\r\n          default:\r\n            return <SignUp handleLogin={handleLogin}/>\r\n        }\r\n      }\r\n      \r\n\r\n    return (\r\n        <div className='Home'>\r\n\r\n            \r\n\r\n            <div className=\"TitleContainer\">\r\n                {/* <img className=\"ui large centered circular image\" src={logo}></img> */}\r\n                <img className=\"HomeImage ui centered image\" src=' https://i.imgur.com/am0eYJO.gif'></img>\r\n                  <h1 className=\"TitleText\">Sprig Goals</h1>\r\n            </div>\r\n\r\n           \r\n\r\n            <div className=\"ui placeholder segment\">\r\n                <FormSection handleFormSwitch={handleFormSwitch}/>\r\n                    <div className=\"ui segment\">\r\n                        {renderForm()}\r\n                    </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n\r\n\r\n}\r\nexport default Home;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/NavBar.js",["109","110"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Footer.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/VirtualPet.js",["111","112","113"],"import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport './Theme.css';\r\n\r\nimport'@babylonjs/loaders/glTF'\r\nimport * as BABYLON from \"@babylonjs/core/Legacy/legacy\";\r\nimport SceneComponent from './SceneComponent';\r\nimport { FreeCamera, Vector3, HemisphericLight, MeshBuilder } from '@babylonjs/core';\r\n\r\nlet container;\r\nlet box;\r\n\r\n\r\n\r\nclass VirtualPet extends React.Component {\r\n\r\n    \r\nrender() {\r\n\r\n    const { location } = this.props;\r\n    if (location.pathname.match('/home')){\r\n      return null;\r\n    }\r\n\r\n    return (\r\n        \r\n        <div className='VirtualPet' >\r\n            <SceneComponent antialias onSceneReady={this.onSceneReady} onRender={this.onRender} id='my-canvas' />\r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n    onSceneReady = scene => {\r\n\r\n           // Default Environment\r\n\r\n    \r\n        // This creates and positions a free camera (non-mesh)\r\n        var camera = new FreeCamera(\"camera1\", new Vector3(0, 5, -10), scene);\r\n        // This targets the camera to scene origin\r\n        camera.setTarget(Vector3.Zero());\r\n        const canvas = scene.getEngine().getRenderingCanvas();\r\n        // This attaches the camera to the canvas\r\n        camera.attachControl(canvas, true);\r\n        \r\n        // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\r\n        var light = new HemisphericLight(\"light\", new Vector3(0, 1, 0), scene);\r\n        // Default intensity is 1. Let's dim the light a small amount\r\n        light.intensity = 0.7;\r\n\r\n        // Our built-in 'ground' shape.\r\n        MeshBuilder.CreateGround(\"ground\", {width: 25, height: 6}, scene);\r\n\r\n\r\n\r\n\r\n        BABYLON.SceneLoader.LoadAssetContainer(\"../models/\", \"sprig-wave.glb\", scene, function (container) {\r\n            var meshes = container.meshes;\r\n            var materials = container.materials;\r\n\r\n            const sprig = meshes[0]\r\n\r\n            scene.beforeRender = () => {\r\n                // sprig.position.y = 0;\r\n                sprig.rotation.y = .1;\r\n                sprig.rotationQuaternion = undefined;\r\n\r\n                }\r\n            // Adds all elements to the scene\r\n            container.addAllToScene();\r\n        });\r\n  }\r\n\r\n    //Will run on every frame render.  We are spinning the box on y-axis.\r\n    onRender = scene => {\r\n        if (box !== undefined) {\r\n        var deltaTimeInMillis = scene.getEngine().getDeltaTime();\r\n        const rpm = 10;\r\n        box.rotation.y += ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\r\n        }\r\n  }\r\n\r\n\r\n}\r\nexport default withRouter(VirtualPet);","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SceneComponent.jsx",["114","115","116","117"],"import * as BABYLON from \"@babylonjs/core/Legacy/legacy\";\r\nimport { Engine, Scene } from '@babylonjs/core'\r\nimport React, { useEffect, useRef } from 'react'\r\n\r\n\r\n\r\n\r\nexport default (props) => {\r\n    \r\n    const pet = document.querySelector('.VirtualPet')\r\n    const reactCanvas = useRef(null);\r\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\r\n\r\n      \r\n\r\n\r\n    useEffect(() => {\r\n        if (reactCanvas.current) {\r\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio);\r\n            const scene = new Scene(engine, sceneOptions);\r\n\r\n            if (scene.isReady()) {\r\n                props.onSceneReady(scene)\r\n                \r\n            } else {\r\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\r\n            }\r\n\r\n            engine.runRenderLoop(() => {\r\n                if (typeof onRender === 'function') {\r\n                    onRender(scene);\r\n                }\r\n                scene.render();\r\n            })\r\n            \r\n            const resize = () => {\r\n                scene.getEngine().resize();\r\n            }\r\n            if (window) {\r\n                window.addEventListener('resize', resize);\r\n            }\r\n            return () => {\r\n                scene.getEngine().dispose();\r\n                if (window) {\r\n                    window.removeEventListener('resize', resize);\r\n                }\r\n            }\r\n        }\r\n    }, [reactCanvas])\r\n    return (\r\n        <canvas ref={reactCanvas} {...rest} />\r\n    );\r\n}","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Complete.js",["118"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goal.js",["119","120","121","122","123","124","125"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Goals.js",["126","127","128"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newForm.jsx",["129","130","131"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { connect } from 'react-redux'\r\nimport { currentUser } from '../actions/auth'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\nclass newForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            info: \"\",\r\n            date: \"\",\r\n            time: \"\",\r\n            completed: false,\r\n            user_id: 0,\r\n            tag_id: 0\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value    \r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/goals\";\r\n    const newGoal = {...this.state, user_id: this.props.currentUser.id}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(newGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\nrender() {      \r\n    return (\r\n        \r\n        <div className='Goals'>\r\n\r\n                <h1 className=\"ui yellow image header\">What will you accomplish today?</h1>\r\n\r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"twelve wide column\">\r\n\r\n                    <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                        \r\n                        <div className=\"field\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"Goal Name\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label>Info</label>\r\n                            <textarea rows=\"3\" name=\"info\" placeholder=\"Description\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"fields\">\r\n                            <div className=\"field\">\r\n                            <label>Date</label>\r\n                            <input type=\"date\" name=\"date\" onChange={this.onChange}/>\r\n                            </div>\r\n                            \r\n                            <div className=\"field\">\r\n                            <label>Time</label>\r\n                            <input type=\"time\" name=\"time\" onChange={this.onChange}/>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Add Goal</button>\r\n                        <div class=\"ui error message\"></div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n      currentUser: state.currentUser,\r\n      goals: state.goals\r\n    }\r\n  }\r\n\r\nexport default connect(mapStateToProps)(newForm);","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateForm.jsx",["132","133","134"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\nclass updateForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { goal: { tasks: [] }\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: {params: { id }}} = this.props;\r\n        \r\n          const url = `http://localhost:3001/goals/${id}`;\r\n  \r\n          fetch(url)\r\n          .then(response => {\r\n              if (response.ok) {\r\n              return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ goal: response }))\r\n          .catch(() => this.props.history.push(`/goals/${id}`));\r\n      }\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            goal: {...this.state.goal, [event.target.name]: event.target.value }   \r\n            \r\n        });\r\n\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { match: {params: { id }}} = this.props;\r\n    const url = `http://localhost:3001/goals/${id}`;\r\n    const updatedGoal = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(updatedGoal)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${response.id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\n\r\nrender() {      \r\n    const { goal } = this.state;\r\n    const goalTasks = goal.tasks;\r\n\r\n    let taskList = \"No tasks created yet\";\r\n\r\n    const allTasks =  goalTasks.map((task, index) => (\r\n        <div className='Task item'>\r\n\r\n        <i className=\"right triangle icon\"></i>\r\n\r\n          <div className=\"content\">\r\n            <div className=\"header\">{task.name}</div>\r\n            <div className=\"description\">{task.description}</div>\r\n          </div>\r\n\r\n          <div class=\"ui small right floated icon buttons\">\r\n            {/* <button class=\"ui button\"><i class=\"red eraser icon\"></i></button>\r\n            <button class=\"ui button\"><i class=\"black edit icon\"></i></button> */}\r\n          </div>\r\n\r\n      </div>\r\n        ))\r\n\r\n\r\n\r\n    return (\r\n\r\n        \r\n        \r\n        <div className='Goals'>\r\n\r\n            <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                \r\n                <div className=\"ui centered grid\">\r\n\r\n                    <div className=\" Main ten wide column\">\r\n                        <div className=\"ui segments\">\r\n                            <a className=\"ui small image\"> <img src={logo}/> </a>\r\n\r\n                                <div className=\"ui olive segment\">\r\n                                    <h3 class=\"ui header\">\r\n                                        <div className=\"field\">\r\n                                            <label>Name</label>\r\n                                            <input type=\"text\" name=\"name\" value={this.state.goal.name} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </h3>\r\n                                </div>\r\n\r\n                                <div className='ui horizontal segments'>\r\n                                    <div className='ui olive segment'>\r\n                                        <div className=\"field\">\r\n                                            <i class=\"calendar outline icon\"></i><label>Date </label>\r\n                                            <input type=\"date\" name=\"date\" value={this.state.goal.date} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <div className='ui olive segment'>\r\n                                        <div className=\"field\">\r\n                                            <i class=\"clock outline icon\"></i><label>Time </label>\r\n                                            <input type=\"time\" name=\"time\" value={this.state.goal.time} onChange={this.onChange}/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className='ui secondary olive segment'>\r\n                                    <div className=\"ui header\">Info</div>\r\n                                        <div className=\"field\">\r\n                                            <textarea rows=\"4\" name=\"info\" value={this.state.goal.info} onChange={this.onChange}/>\r\n                                        </div>\r\n\r\n                                    <div class=\"two ui buttons\">\r\n                                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Update Goal</button>\r\n                                        <Link to={`/goals/${this.state.goal.id}`}>\r\n                                            <button className=\"ui fluid large red submit button\">Go Back\r\n                                            </button></Link>\r\n                                    </div>\r\n\r\n                                    <div class=\"ui error message\"></div>\r\n                                \r\n                                    <div className=\"ui divider\"></div>\r\n                                    <a className=\"header\"> <h3>Tasks</h3> </a>\r\n\r\n                                    <div className= 'ui middle aligned divided list'>\r\n                                    {goal.tasks.length > 0 ? allTasks : taskList}\r\n                                  </div>\r\n                                </div> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            \r\n            </form>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default updateForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/newTaskForm.jsx",["135"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass newTaskForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: \"\",\r\n            description: \"\",\r\n            completed: false,\r\n            goal_id: this.props.location.state.goal_id,\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    \r\n\r\n    }\r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            [event.target.name]: event.target.value    \r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n    const url = \"http://localhost:3001/tasks\";\r\n    const newTask = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(newTask)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${this.state.goal_id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\nrender() {      \r\n    return (\r\n        \r\n        <div className='Goals'>\r\n\r\n            <div class=\"ui items\">\r\n                <h1 className=\"ui yellow image header\">Goal: {this.props.location.state.goal_name}</h1>\r\n            </div> \r\n\r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"twelve wide column\">\r\n\r\n                    <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                        \r\n                        <div className=\"field\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" placeholder=\"Task Name\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label>Extra Info</label>\r\n                            <textarea rows=\"3\" name=\"description\" placeholder=\"Description\" onChange={this.onChange}/>\r\n                        </div>\r\n\r\n\r\n                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Add Task</button>\r\n                        <div class=\"ui error message\"></div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default newTaskForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/updateTaskForm.jsx",["136"],"import React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nclass updateTaskForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            task: []\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { match: {params: { id }}} = this.props;\r\n        \r\n          const url = `http://localhost:3001/tasks/${id}`;\r\n  \r\n          fetch(url)\r\n          .then(response => {\r\n              if (response.ok) {\r\n              return response.json();\r\n              }\r\n              throw new Error(\"Network response was not ok.\");\r\n          })\r\n          .then(response => this.setState({ task: response }))\r\n          .catch(() => this.props.history.push(`/tasks/${id}`));\r\n      }\r\n\r\n\r\n    onChange = (event) => {\r\n        this.setState({ \r\n            task: {...this.state.task, [event.target.name]: event.target.value }    \r\n        });\r\n    }\r\n\r\n    onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const { match: {params: { id }}} = this.props;\r\n    const url = `http://localhost:3001/tasks/${id}`;\r\n    const updatedTask = {...this.state}\r\n    //-----------------------\r\n    const reqObj = {\r\n      method: 'PATCH',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body:  JSON.stringify(updatedTask)\r\n    }\r\n    //------------------------------\r\n    fetch(url, reqObj)\r\n        .then(response => {\r\n        if (response.ok) {\r\n            return response.json();\r\n        }\r\n        throw new Error(\"Network response was not ok.\");\r\n        })\r\n        .then(response => this.props.history.push(`/goals/${this.state.task.goal_id}`))\r\n        .catch(error => console.log(error.message));\r\n    }\r\n\r\n\r\n\r\nrender() {      \r\n    return (\r\n        \r\n        <div className='Task'>\r\n\r\n            <div class=\"ui items\">\r\n                <h1 className=\"ui yellow image header\">Goal: {this.props.location.state.goal_name}</h1>\r\n            </div> \r\n\r\n\r\n            <div className=\"ui two column centered grid\">\r\n                <div className=\"twelve wide column\">\r\n\r\n                    <form className=\"ui form\" onSubmit={this.onSubmit} >\r\n                        \r\n                        <div className=\"field\">\r\n                            <label>Name</label>\r\n                            <input type=\"text\" name=\"name\" value={this.state.task.name} onChange={this.onChange}/>\r\n                        </div>\r\n\r\n                        <div className=\"field\">\r\n                            <label>Extra Info</label>\r\n                            <textarea rows=\"3\" name=\"description\" value={this.state.task.description} onChange={this.onChange}/>\r\n                        </div>\r\n\r\n\r\n                        <button className=\"ui fluid large yellow submit button\" type=\"submit\">Update Task</button>\r\n                        <div class=\"ui error message\"></div>\r\n                        \r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            \r\n        </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nexport default updateTaskForm;","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/SignUp.jsx",["137","138","139"],"import React, {useState} from 'react'\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport { loginSuccess } from '../actions/auth'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\n\r\nclass SignUp extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          username: \"\",\r\n          email: \"\",\r\n          password: \"\",\r\n          error: \"\"\r\n      };\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  onChange = (event) => {\r\n    this.setState({ \r\n        [event.target.name]: event.target.value    \r\n    });\r\n  }\r\n\r\n  onSubmit(event) {\r\n  event.preventDefault();\r\n  const url = \"http://localhost:3001/signup\";\r\n  const newUser = {...this.state}\r\n  //-----------------------\r\n  const reqObj = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body:  JSON.stringify(newUser)\r\n  }\r\n  //------------------------------\r\n  fetch(url, reqObj)\r\n    .then(resp => {\r\n      if (resp.ok) {\r\n          return resp.json();\r\n      }\r\n      throw new Error(\"Network response was not ok.\");\r\n      })\r\n    .then(data => {\r\n      if (data.error){\r\n        this.setState({\r\n          error: data.error\r\n        })\r\n      } else {\r\n        this.props.loginSuccess(data)\r\n        this.props.history.push('/goals')\r\n      }\r\n    })\r\n  }\r\n\r\n//   fetch(url, reqObj)\r\n//   .then(resp => resp.json())\r\n//   .then(data => {\r\n//     if (data.error){\r\n//       this.setState({\r\n//         error: data.error\r\n//       })\r\n//     } else {\r\n//       this.props.loginSuccess(data)\r\n//       this.props.history.push('/goals')\r\n//     }\r\n//   })\r\n// }\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n    <div className='SignUp'>\r\n\r\n      <h2 className=\"ui yellow image header\">\r\n        <img src={logo} className=\"image\"/>\r\n          <div className=\"content\">\r\n          Create a new Account\r\n          </div>\r\n      </h2>\r\n\r\n        <div className=\"ui two column centered grid\">\r\n          <div className=\"twelve wide column\">\r\n            \r\n            <form className=\"ui form\" onSubmit={this.onSubmit}>\r\n\r\n\r\n              <div className=\"field\">\r\n                <div className=\"ui left icon input\">\r\n                  <i className=\"user icon\"></i>\r\n                  <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange}/>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <div className=\"ui left icon input\">\r\n                  <i className=\"envelope icon\"></i>\r\n                  <input type=\"text\" name=\"email\" placeholder=\"E-mail address\" onChange={this.onChange}/>                \r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <div className=\"ui left icon input\">\r\n                  <i className=\"lock icon\"></i>\r\n                  <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange}/>\r\n                </div>\r\n              </div>\r\n\r\n              <input type='submit' className=\"ui fluid large yellow submit button\" value='Create Account'></input>\r\n              <div className=\"ui error message\">\r\n              {this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n        </div> \r\n    </div>\r\n\r\n    );\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  loginSuccess: loginSuccess\r\n}\r\n\r\nexport default  withRouter(connect(null, mapDispatchToProps)(SignUp));","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/Login.jsx",["140","141"],"import React from 'react';\r\nimport { Link , withRouter} from \"react-router-dom\";\r\nimport { connect } from 'react-redux'\r\nimport { loginSuccess } from '../actions/auth'\r\n\r\nimport logo from '../images/sprig logo.png'\r\n\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          username: \"\",\r\n          password: \"\",\r\n          error: \"\"\r\n      };\r\n      this.onChange = this.onChange.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n\r\n  onChange = (event) => {\r\n    this.setState({ \r\n        [event.target.name]: event.target.value    \r\n    });\r\n}\r\n\r\n\r\n  onSubmit(event) {\r\n  event.preventDefault();\r\n  const url = \"http://localhost:3001/auth\";\r\n  const newUser = {...this.state}\r\n  //-----------------------\r\n  const reqObj = {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body:  JSON.stringify(newUser)\r\n  }\r\n  //------------------------------\r\n  fetch(url, reqObj)\r\n  .then(resp => resp.json())\r\n    .then(data => {\r\n      if (data.error){\r\n        this.setState({\r\n          error: data.error\r\n        })\r\n      } else {\r\n        this.props.loginSuccess(data)\r\n        this.props.history.push('/goals')\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n\r\n    <div className='Login'>\r\n\r\n      <h2 className=\"ui yellow image header\">\r\n        <img src={logo} className=\"image\"/>\r\n          {/* <div className=\"content\">\r\n          Welcome Back!\r\n          </div> */}\r\n      </h2>\r\n\r\n        <div className=\"ui two column centered grid\">\r\n          <div className=\"twelve wide column\">\r\n            \r\n            <form className=\"ui form\" onSubmit={this.onSubmit}>\r\n\r\n              <div className=\"field\">\r\n                <div className=\"ui left icon input\">\r\n                  <i className=\"user icon\"></i>\r\n                  <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={this.onChange} value={this.state.username}/>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"field\">\r\n                <div className=\"ui left icon input\">\r\n                  <i className=\"lock icon\"></i>\r\n                  <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={this.onChange} value={this.state.password}/>\r\n                </div>\r\n              </div>\r\n\r\n            <input type='submit' className=\"ui fluid large yellow submit button\" value='Login'></input>\r\n              <div className=\"ui error message\">\r\n              {this.state.error ? <h4 style={{color: 'red'}}>{this.state.error}</h4> : null}\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n        </div> \r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  loginSuccess: loginSuccess\r\n}\r\n\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Login))","/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/components/LoginFormSection.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reportWebVitals.js",[],["142","143"],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/index.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/currentUser.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/reducers/goals.js",[],"/mnt/c/Users/Boss-Alethei/dev/flatiron/labs/sprig_goals_frontend/src/actions/auth.js",[],{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","severity":1,"message":"149","line":1,"column":28,"nodeType":"150","messageId":"151","endLine":1,"endColumn":37},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"153","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":12},{"ruleId":"148","severity":1,"message":"154","line":12,"column":12,"nodeType":"150","messageId":"151","endLine":12,"endColumn":16},{"ruleId":"155","severity":1,"message":"156","line":28,"column":13,"nodeType":"157","messageId":"158","endLine":28,"endColumn":19},{"ruleId":"159","severity":1,"message":"160","line":42,"column":17,"nodeType":"161","endLine":42,"endColumn":101},{"ruleId":"159","severity":1,"message":"160","line":26,"column":25,"nodeType":"161","endLine":26,"endColumn":77},{"ruleId":"159","severity":1,"message":"160","line":56,"column":25,"nodeType":"161","endLine":56,"endColumn":77},{"ruleId":"148","severity":1,"message":"162","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":16},{"ruleId":"148","severity":1,"message":"163","line":12,"column":5,"nodeType":"150","messageId":"151","endLine":12,"endColumn":14},{"ruleId":"148","severity":1,"message":"164","line":62,"column":17,"nodeType":"150","messageId":"151","endLine":62,"endColumn":26},{"ruleId":"148","severity":1,"message":"165","line":1,"column":13,"nodeType":"150","messageId":"151","endLine":1,"endColumn":20},{"ruleId":"166","severity":1,"message":"167","line":8,"column":1,"nodeType":"168","endLine":53,"endColumn":2},{"ruleId":"148","severity":1,"message":"169","line":10,"column":11,"nodeType":"150","messageId":"151","endLine":10,"endColumn":14},{"ruleId":"170","severity":1,"message":"171","line":49,"column":8,"nodeType":"172","endLine":49,"endColumn":21,"suggestions":"173"},{"ruleId":"148","severity":1,"message":"174","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":21},{"ruleId":"148","severity":1,"message":"175","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":25},{"ruleId":"148","severity":1,"message":"176","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":24},{"ruleId":"148","severity":1,"message":"174","line":8,"column":10,"nodeType":"150","messageId":"151","endLine":8,"endColumn":21},{"ruleId":"148","severity":1,"message":"177","line":116,"column":13,"nodeType":"150","messageId":"151","endLine":116,"endColumn":27},{"ruleId":"178","severity":1,"message":"179","line":198,"column":31,"nodeType":"161","endLine":198,"endColumn":61},{"ruleId":"159","severity":1,"message":"160","line":198,"column":62,"nodeType":"161","endLine":198,"endColumn":79},{"ruleId":"178","severity":1,"message":"179","line":223,"column":35,"nodeType":"161","endLine":223,"endColumn":57},{"ruleId":"148","severity":1,"message":"180","line":3,"column":8,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"181","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"148","severity":1,"message":"174","line":7,"column":10,"nodeType":"150","messageId":"151","endLine":7,"endColumn":21},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"174","line":5,"column":10,"nodeType":"150","messageId":"151","endLine":5,"endColumn":21},{"ruleId":"148","severity":1,"message":"153","line":7,"column":8,"nodeType":"150","messageId":"151","endLine":7,"endColumn":12},{"ruleId":"178","severity":1,"message":"179","line":107,"column":29,"nodeType":"161","endLine":107,"endColumn":59},{"ruleId":"159","severity":1,"message":"160","line":107,"column":60,"nodeType":"161","endLine":107,"endColumn":77},{"ruleId":"178","severity":1,"message":"179","line":150,"column":37,"nodeType":"161","endLine":150,"endColumn":59},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"182","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":24},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":82,"column":9,"nodeType":"161","endLine":82,"endColumn":44},{"ruleId":"148","severity":1,"message":"152","line":2,"column":10,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"159","severity":1,"message":"160","line":64,"column":9,"nodeType":"161","endLine":64,"endColumn":44},{"ruleId":"144","replacedBy":"183"},{"ruleId":"146","replacedBy":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'logo' is defined but never used.","'user' is assigned a value but never used.","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReactDOM' is defined but never used.","'container' is defined but never used.","'materials' is assigned a value but never used.","'BABYLON' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'pet' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'adaptToDeviceRatio', 'antialias', 'engineOptions', 'onRender', 'props', and 'sceneOptions'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["187"],"'currentUser' is defined but never used.","'Redirect' is defined but never used.","'SetStateAction' is defined but never used.","'tasklistlength' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'NavBar' is defined but never used.","'Footer' is defined but never used.","'useState' is defined but never used.",["185"],["186"],"no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},"Update the dependencies array to be: [adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]",{"range":"190","text":"191"},[1514,1527],"[adaptToDeviceRatio, antialias, engineOptions, onRender, props, reactCanvas, sceneOptions]"]